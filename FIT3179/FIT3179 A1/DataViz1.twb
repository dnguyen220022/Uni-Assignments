<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Extensions />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <_.fcp.VizExtensions.true...VizExtensions />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='DataViz1_17253481708350' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleanedPedCount+' inline='true' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleanedPedCount' name='textscan.00burap0jelhme14oad5y18wd9g1'>
            <connection class='textscan' directory='C:/Users/TechFast Australia/Desktop/Data Viz 1/datasets' filename='cleanedPedCount.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.00burap0jelhme14oad5y18wd9g1' name='cleanedPedCount.csv' table='[cleanedPedCount#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='sensor_name' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='datetime' date-parse-format='HH:mm:ssZZZZZ' name='time' ordinal='3' />
            <column datatype='integer' name='locationid' ordinal='4' />
            <column datatype='integer' name='direction_1' ordinal='5' />
            <column datatype='integer' name='direction_2' ordinal='6' />
            <column datatype='integer' name='total_of_directions' ordinal='7' />
            <column datatype='string' name='location' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.00burap0jelhme14oad5y18wd9g1' name='cleanedPedCount.csv' table='[cleanedPedCount#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='sensor_name' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='datetime' date-parse-format='HH:mm:ssZZZZZ' name='time' ordinal='3' />
            <column datatype='integer' name='locationid' ordinal='4' />
            <column datatype='integer' name='direction_1' ordinal='5' />
            <column datatype='integer' name='direction_2' ordinal='6' />
            <column datatype='integer' name='total_of_directions' ordinal='7' />
            <column datatype='string' name='location' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_AU&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sensor_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sensor_name]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>sensor_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>locationid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[locationid]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>locationid</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction_1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[direction_1]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>direction_1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>direction_2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[direction_2]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>direction_2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_of_directions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_of_directions]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>total_of_directions</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[cleanedPedCount.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
      </column>
      <column caption='Difference From Average' datatype='real' name='[Calculation_1655072919008141313]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([total_of_directions]) - WINDOW_AVG(AVG([total_of_directions]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='AusTime' datatype='datetime' name='[Calculation_1655072919010439170]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, 10, [time])' />
      </column>
      <column caption='FridayNight' datatype='string' name='[Calculation_311592856839315477]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &gt;= 21 AND [Calculation_1655072919006461952] = &quot;Friday&quot;) OR (DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &lt;= 4 AND [Calculation_1655072919006461952] = &quot;Saturday&quot;)&#13;&#10;THEN &quot;Yes&quot;&#13;&#10;&#13;&#10;ELSE &quot;No&quot;&#13;&#10;END' />
      </column>
      <column caption='Ranking' datatype='integer' name='[Calculation_311592856850694177]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(AVG([total_of_directions]), &quot;desc&quot;)'>
          <table-calc ordering-field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Calculation_1655072919006461952]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Day or Night' datatype='string' name='[Calculation_466967043646042112]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &gt;= 6 AND DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &lt;= 21)&#13;&#10;THEN &quot;Day&quot;&#13;&#10;&#13;&#10;ELSE &quot;Night&quot;&#13;&#10;END' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleanedPedCount.csv' datatype='table' name='[__tableau_internal_object_id__].[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Direction 1' datatype='integer' name='[direction_1]' role='measure' type='quantitative' />
      <column caption='Direction 2' datatype='integer' name='[direction_2]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
        <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
        <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
      </column>
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Locationid' datatype='integer' name='[locationid]' role='measure' type='quantitative' />
      <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;261Will_T&quot;' value='261 William St' />
          <alias key='&quot;280Will_T&quot;' value='280 William St' />
          <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
          <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
          <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
          <alias key='&quot;ACMI_T&quot;' value='ACMI' />
          <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
          <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
          <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
          <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
          <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
          <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
          <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
          <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
          <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
          <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
          <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
          <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
          <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
          <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
          <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
          <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
          <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
          <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
          <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
          <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
          <alias key='&quot;Col892T&quot;' value='892 Collins St' />
          <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
          <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
          <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
          <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
          <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
          <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
          <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
          <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
          <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
          <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
          <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
          <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
          <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
          <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
          <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
          <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
          <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
          <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
          <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
          <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
          <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
          <alias key='&quot;King2_T&quot;' value='2 King St' />
          <alias key='&quot;King335_T&quot;' value='335 King St' />
          <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
          <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
          <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
          <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
          <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
          <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
          <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
          <alias key='&quot;MCEC_T&quot;' value='MCEC' />
          <alias key='&quot;NewQ_T&quot;' value='New Quay' />
          <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
          <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
          <alias key='&quot;Que85_T&quot;' value='Queen St West' />
          <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
          <alias key='&quot;QVN_T&quot;' value='State Library' />
          <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
          <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
          <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
          <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
          <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
          <alias key='&quot;SouthB_T&quot;' value='Southbank' />
          <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
          <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
          <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
          <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
          <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
          <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
          <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
          <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
          <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
          <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
          <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
          <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
          <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
          <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
          <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
          <alias key='&quot;Vic_T&quot;' value='QV Market' />
          <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
          <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
          <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
        </aliases>
      </column>
      <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
      <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
      <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
      <column-instance column='[sensor_name]' derivation='None' name='[none:sensor_name:nk]' pivot='key' type='nominal' />
      <group caption='Action (DayofWeek)' hidden='true' name='[Action (DayofWeek)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1655072919006461952]' />
        </groupfilter>
      </group>
      <group caption='Action (Latitude,Longitude)' hidden='true' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
          <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Sensor Name)' hidden='true' name='[Action (Sensor Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[sensor_name]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/TechFast Australia/Documents/My Tableau Repository/Datasources/cleanedPedCount+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='09/03/2024 06:02:19 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='cleanedPedCount+' increment-value='%null%' refresh-type='create' rows-inserted='702266' timestamp-start='2024-09-03 06:02:16.289' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>702266</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sensor_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sensor_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sensor_name</remote-alias>
              <ordinal>1</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>560</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time</remote-alias>
              <ordinal>3</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>locationid</remote-name>
              <remote-type>20</remote-type>
              <local-name>[locationid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>locationid</remote-alias>
              <ordinal>4</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction_1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[direction_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction_1</remote-alias>
              <ordinal>5</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5195</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>direction_2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[direction_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>direction_2</remote-alias>
              <ordinal>6</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4901</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_of_directions</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_of_directions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_of_directions</remote-alias>
              <ordinal>7</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8493</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>8</ordinal>
              <family>cleanedPedCount.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:sensor_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;AlfPl_T&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fra118_T&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Spr201_T&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swa295_T&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;UM3_T&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Col254_T&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Col623_T&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FLDegC_T&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;King2_T&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Signal1647_T&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;280Will_T&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bou892T&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Errol23_T&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HarEsB_T&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SwaCs_T&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eli380_T&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LtB210_T&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lyg161_T&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NewQ_T&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WestWP_T&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BirBridge_T&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BouHbr_T&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;KenMac_T&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lyg309_T&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Swa123_T&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bou283_T&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Col892T&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;HarEsP_T&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swa31&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;VAC_T&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bou231_T&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FLDegN_T&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RMIT_T&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Swa607_T&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bou688_T&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Col12_T&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FliSS_T&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lyg260_T&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SouthB_T&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BirFed1120_T&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eli501_T&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;QVMQ_T&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spen201_T&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ACMI_T&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bou292_T&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fli114C_T&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lat224_T&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;UM1_T&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;474Fl_T&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LtB170_T&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PriNW_T&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spen161_T&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ElFi_T&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eli483_T&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Que85_T&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rus180_T&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;574Qub_T&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FedPed_T&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RMIT14_T&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spen229_T&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Col620_T&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eli250_T&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FLDegS_T&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SanBri_T&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BouBri_T&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;King335_T&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MCEC_T&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pel147_T&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WatCit_T&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AG_T&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fli114F_T&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grat292_T&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LatWill_T&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UM2_T&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;261Will_T&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bou655_T&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Col15_T&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FliS_T&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SprFli_T&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;488Mac_T&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;FedCycle_T&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lon189_T&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vic_T&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BouHbr2353_T&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boyd2837_T&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lon364_T&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swa148_T&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WebBN_T&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Col700_T&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eli263_T&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Errol20_T&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hammer1584_T&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;QVN_T&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Australia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Calculation_311592856663498766' />
        <field-sort-custom-order field='Calculation_311592856663334924' />
        <field-sort-custom-order field='Calculation_311592856661737481' />
        <field-sort-custom-order field='sensor_name' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='Calculation_1655072919006461952' />
        <field-sort-custom-order field='Calculation_311592856841814038' />
        <field-sort-custom-order field='time' />
        <field-sort-custom-order field='Calculation_466967043646042112' />
        <field-sort-custom-order field='Calculation_311592856839315477' />
        <field-sort-custom-order field='Calculation_311592856667566099' />
        <field-sort-custom-order field='Calculation_1655072919010439170' />
        <field-sort-custom-order field='locationid' />
        <field-sort-custom-order field='direction_1' />
        <field-sort-custom-order field='direction_2' />
        <field-sort-custom-order field='total_of_directions' />
        <field-sort-custom-order field='Calculation_311592856654639109' />
        <field-sort-custom-order field='Calculation_311592856642842624' />
        <field-sort-custom-order field='location' />
        <field-sort-custom-order field='F1 (cleanedClimate.csv)' />
        <field-sort-custom-order field='date (cleanedClimate.csv)' />
        <field-sort-custom-order field='time (cleanedClimate.csv)' />
        <field-sort-custom-order field='dev_id' />
        <field-sort-custom-order field='Sensor.Name' />
        <field-sort-custom-order field='temperature' />
        <field-sort-custom-order field='humidity' />
        <field-sort-custom-order field='battery' />
        <field-sort-custom-order field='Lat.Long' />
        <field-sort-custom-order field='Location.Picture.Hyperlink' />
        <field-sort-custom-order field='F1 (cleanedCO2.csv)' />
        <field-sort-custom-order field='dev_id (cleanedCO2.csv)' />
        <field-sort-custom-order field='sensor_name (cleanedCO2.csv)' />
        <field-sort-custom-order field='date (cleanedCO2.csv)' />
        <field-sort-custom-order field='time (cleanedCO2.csv)' />
        <field-sort-custom-order field='temperature (cleanedCO2.csv)' />
        <field-sort-custom-order field='humidity (cleanedCO2.csv)' />
        <field-sort-custom-order field='light' />
        <field-sort-custom-order field='motion' />
        <field-sort-custom-order field='visit' />
        <field-sort-custom-order field='vdd' />
        <field-sort-custom-order field='lat_long' />
        <field-sort-custom-order field='co2' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleanedPedCount.csv' id='cleanedPedCount.csv_C7B834E2A3074DC999A1BC558A2CC3AD'>
            <properties context=''>
              <relation connection='textscan.00burap0jelhme14oad5y18wd9g1' name='cleanedPedCount.csv' table='[cleanedPedCount#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_AU' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='sensor_name' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='datetime' date-parse-format='HH:mm:ssZZZZZ' name='time' ordinal='3' />
                  <column datatype='integer' name='locationid' ordinal='4' />
                  <column datatype='integer' name='direction_1' ordinal='5' />
                  <column datatype='integer' name='direction_2' ordinal='6' />
                  <column datatype='integer' name='total_of_directions' ordinal='7' />
                  <column datatype='string' name='location' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_2EC2F8C7492D4E88A46A9D6146845667]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='25 Busiest Locations by Sensor' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_80C0258F53904EBF8820104360D8D66B]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='CBD Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_CCFF8FE1E11749949F64FDB44B68E1F6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Hourly Pedestrians Relative to Average by Day of Week' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name=' Avg. Hourly Pedestrians by Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]'>
            <groupfilter function='level-members' level='[Calculation_1655072919006461952]' user:ui-action-filter='[Action3_CCFF8FE1E11749949F64FDB44B68E1F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80C0258F53904EBF8820104360D8D66B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
              <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_95BCCC4D0CC84FF88C2008199B6FE19E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' value='#666666' />
            <format attr='tick-color' value='#00000000' />
            <format attr='title' class='0' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' scope='rows' value='Avg. Hourly Pedestrians' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[twk:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Hourly Pedestrians:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</rows>
        <cols>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[twk:date:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontalignment='1'>October 2023 is missing a large portion of sensor data</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='#2023-10-08 13:33:49.282#'>
                  <node-reference>
                    <axis>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[twk:date:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='70.270885116409971'>
                  <node-reference>
                    <axis>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='-112' y='-65' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{966D10D2-5459-4EC4-86E3-B2C5A86F8D88}' />
    </worksheet>
    <worksheet name='25 Busiest Locations by Sensor'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sensor_name]' derivation='None' name='[none:sensor_name:nk]' pivot='key' type='nominal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]' context='true'>
            <groupfilter function='level-members' level='[Calculation_1655072919006461952]' user:ui-action-filter='[Action3_CCFF8FE1E11749949F64FDB44B68E1F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80C0258F53904EBF8820104360D8D66B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
              <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]'>
            <groupfilter count='25' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([total_of_directions])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:sensor_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1011' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' value='Avg. Hourly Pedestrians'>
              <formatted-text>
                <run>Avg. Hourly Pedestrians</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]' />
              <color column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
              <size column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Sensor Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Hourly Pedestrians:&#9;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{738939F4-6841-4588-857B-EB08D6B7B429}' />
    </worksheet>
    <worksheet name='Avg Temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]'>
            <groupfilter function='level-members' level='[Calculation_1655072919006461952]' user:ui-action-filter='[Action3_CCFF8FE1E11749949F64FDB44B68E1F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80C0258F53904EBF8820104360D8D66B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
              <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_2EC2F8C7492D4E88A46A9D6146845667]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' value='#898989' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[tdy:date:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</cols>
      </table>
      <simple-id uuid='{6118AC6D-9208-4BBD-946E-43AC0817DDA0}' />
    </worksheet>
    <worksheet name='Avg. Pedestrains by Time of Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column caption='AusTime' datatype='datetime' name='[Calculation_1655072919010439170]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, 10, [time])' />
            </column>
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1655072919010439170]' derivation='Hour' name='[hr:Calculation_1655072919010439170:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]'>
            <groupfilter function='level-members' level='[Calculation_1655072919006461952]' user:ui-action-filter='[Action3_CCFF8FE1E11749949F64FDB44B68E1F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80C0258F53904EBF8820104360D8D66B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
              <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_95BCCC4D0CC84FF88C2008199B6FE19E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' scope='rows' value='Avg. Hourly Pedestrians' />
            <format attr='tick-color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' value='#00000000' />
            <format attr='stroke-color' value='#666666' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='header'>
            <format attr='font-family' data-class='subtotal' scope='cols' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[hr:Calculation_1655072919010439170:ok]' value='ih a' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Hour Starting:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[hr:Calculation_1655072919010439170:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Hourly Pedestrians:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</rows>
        <cols>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[hr:Calculation_1655072919010439170:ok]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontalignment='1'>The peaks at 12PM-1PM and 4-5PM are more pronounced on weekdays, but not on weekends. Lunch breaks and the end of the workday perhaps? Click on the day of the week to show stats for those days</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[hr:Calculation_1655072919010439170:ok]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</field>
                      <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[hr:Calculation_1655072919010439170:ok]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>721.38559514337078</value>
                    <value>12</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-243' y='71' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{63800EDA-DEB5-42A8-A6E3-53D446BFD969}' />
    </worksheet>
    <worksheet name='CBD Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column-instance column='[sensor_name]' derivation='Attribute' name='[attr:sensor_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:qk]' pivot='key' type='quantitative' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]'>
            <groupfilter function='level-members' level='[Calculation_1655072919006461952]' user:ui-action-filter='[Action3_CCFF8FE1E11749949F64FDB44B68E1F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_95BCCC4D0CC84FF88C2008199B6FE19E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:location - Split 2:qk]' field-type='quantitative' max='16140647.167149264' min='16132996.06902569' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:location - Split 1:qk]' field-type='quantitative' max='-4551377.4612434823' min='-4554696.0099315969' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_0' value='#fafafa' />
            <format attr='border-color' id='annotation_0' value='#f5f5f5' />
            <format attr='border-style' id='annotation_0' value='solid' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[attr:sensor_name:nk]' />
              <color column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
              <size column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
              <tooltip column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000' fontname='Yu Gothic UI'><![CDATA[Sensor Name:	<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[attr:sensor_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Yu Gothic UI'><![CDATA[Avg. Hourly Pedestrians:	<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:location - Split 1:qk]</rows>
        <cols>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:location - Split 2:qk]</cols>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Highlight sensors to filter by location</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='16139379.665954094'>
                  <node-reference>
                    <axis>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:location - Split 2:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-4551423.5521974843'>
                  <node-reference>
                    <axis>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:location - Split 1:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='144.9825143013438' v='-37.801509267805571' />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='16140616.439847562'>
                  <node-reference>
                    <axis>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:location - Split 2:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='-4551976.6436455026'>
                  <node-reference>
                    <axis>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:location - Split 1:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
                <projection name='EPSG:3857' u='144.99362443025882' v='-37.805434972395638' />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{3570C5EA-69BE-4437-B243-4CE29C814531}' />
    </worksheet>
    <worksheet name='Climate Overview'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_95BCCC4D0CC84FF88C2008199B6FE19E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' scope='cols' value='Avg. Hourly Pedestrians' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[tdy:date:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[tdy:date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Co2:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:co2:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Humidity:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:humidity:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Temperature:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:temperature:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Hourly Pedestrians:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows />
        <cols>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</cols>
      </table>
      <simple-id uuid='{B51D852D-32B8-4C43-88C6-651A65897872}' />
    </worksheet>
    <worksheet name='Highest Traffic Area by Day/Night Hours'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column caption='AusTime' datatype='datetime' name='[Calculation_1655072919010439170]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, 10, [time])' />
            </column>
            <column caption='Day or Night' datatype='string' name='[Calculation_466967043646042112]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &gt;= 6 AND DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &lt;= 21)&#13;&#10;THEN &quot;Day&quot;&#13;&#10;&#13;&#10;ELSE &quot;Night&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_466967043646042112]' derivation='None' name='[none:Calculation_466967043646042112:nk]' pivot='key' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sensor_name]' derivation='None' name='[none:sensor_name:nk]' pivot='key' type='nominal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]' context='true'>
            <groupfilter function='level-members' level='[Calculation_1655072919006461952]' user:ui-action-filter='[Action3_CCFF8FE1E11749949F64FDB44B68E1F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80C0258F53904EBF8820104360D8D66B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
              <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]' context='true'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_2EC2F8C7492D4E88A46A9D6146845667]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_466967043646042112:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_466967043646042112:nk]' member='&quot;Night&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([total_of_directions])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:sensor_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_466967043646042112:nk]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='676' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' value='Avg. Hourly Pedestrians'>
              <formatted-text>
                <run bold='true'>Avg. Hourly Pedestrians</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_466967043646042112:nk]' value='Day or Night'>
              <formatted-text>
                <run bold='true' fontname='Yu Gothic UI'>Day or Night</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]' />
              <color column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
              <size column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{565A9539-28E2-4BF6-800E-87FCBB5DD539}' />
    </worksheet>
    <worksheet name='Hourly Pedestrians Relative to Average by Day of Week'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column caption='Difference From Average' datatype='real' name='[Calculation_1655072919008141313]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([total_of_directions]) - WINDOW_AVG(AVG([total_of_directions]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1655072919006461952]' derivation='None' name='[none:Calculation_1655072919006461952:nk]' pivot='key' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1655072919008141313]' derivation='User' name='[usr:Calculation_1655072919008141313:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80C0258F53904EBF8820104360D8D66B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
              <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_95BCCC4D0CC84FF88C2008199B6FE19E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_1655072919008141313:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='stroke-color' value='#666666' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_1655072919008141313:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_1655072919008141313:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Day of Week:&#9;</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_1655072919006461952:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Hourly Difference From Average:	</run>
                <run bold='true'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_1655072919008141313:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_1655072919008141313:qk]</rows>
        <cols>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_1655072919006461952:nk]</cols>
      </table>
      <simple-id uuid='{24C397CD-9732-43CA-BE33-46626CF4CA02}' />
    </worksheet>
    <worksheet name='Most Popular Days by Sensor Location '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column caption='Ranking' datatype='integer' name='[Calculation_311592856850694177]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(AVG([total_of_directions]), &quot;desc&quot;)'>
                <table-calc ordering-field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Calculation_1655072919006461952]' ordering-type='Field' />
              </calculation>
            </column>
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1655072919006461952]' derivation='None' name='[none:Calculation_1655072919006461952:nk]' pivot='key' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sensor_name]' derivation='None' name='[none:sensor_name:nk]' pivot='key' type='nominal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_311592856850694177]' derivation='User' name='[usr:Calculation_311592856850694177:qk:4]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Calculation_1655072919006461952]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80C0258F53904EBF8820104360D8D66B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
              <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_2EC2F8C7492D4E88A46A9D6146845667]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_311592856850694177:qk:4]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_311592856850694177:qk:4]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <_.fcp.VizExtensions.false...mark class='Automatic' />
            <_.fcp.VizExtensions.true...mark class='VizExtension' />
            <_.fcp.VizExtensions.true...add-in add-in-id='com.tableau.extension.sankey' extension-url='https://extensions.tableauusercontent.com/sandbox/sankey/sankey.html' extension-version='1.5.0' instance-id='D5D13BE15AA548788C404412AD2245E2'>
              <instance-settings>
                <setting key='color-palette' value='green' />
                <setting key='edge-padding' value='0' />
                <setting key='ignore-nulls' value='true' />
                <setting key='level-labels-font' value='{&quot;size&quot;:&quot;9pt&quot;,&quot;color&quot;:&quot;#000000&quot;,&quot;family&quot;:&quot;&apos;Tableau Book&apos;,&apos;Tableau&apos;,Arial,sans-serif&quot;,&quot;isBold&quot;:false,&quot;isItalic&quot;:false,&quot;isUnderlined&quot;:false}' />
                <setting key='level-padding' value='0' />
                <setting key='level-width' value='200' />
                <setting key='show-level-labels' value='true' />
                <setting key='show-top-labels' value='false' />
                <setting key='top-labels-font' value='{&quot;size&quot;:&quot;9pt&quot;,&quot;color&quot;:&quot;#000000&quot;,&quot;family&quot;:&quot;&apos;Tableau Book&apos;,&apos;Tableau&apos;,Arial,sans-serif&quot;,&quot;isBold&quot;:false,&quot;isItalic&quot;:false,&quot;isUnderlined&quot;:false}' />
              </instance-settings>
              <type-settings>
                <worksheet />
              </type-settings>
            </_.fcp.VizExtensions.true...add-in>
            <encodings>
              <_.fcp.VizExtensions.false...lod column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]' />
              <_.fcp.VizExtensions.true...custom column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]' custom-type-name='level' />
              <_.fcp.VizExtensions.false...lod column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_1655072919006461952:nk]' />
              <_.fcp.VizExtensions.true...custom column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_1655072919006461952:nk]' custom-type-name='level' />
              <_.fcp.VizExtensions.false...lod column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
              <_.fcp.VizExtensions.true...custom column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' custom-type-name='edge' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878' fontname='Yu Gothic UI'>Most Popular Day:&#9;</run>
                <run bold='true' fontname='Yu Gothic UI'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_1655072919006461952:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Yu Gothic UI'>Sensor Name:&#9;</run>
                <run bold='true' fontname='Yu Gothic UI'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878' fontname='Yu Gothic UI'>Avg. Hourly Pedestrians:&#9;</run>
                <run bold='true' fontname='Yu Gothic UI'><![CDATA[<[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{90EEC9C8-DD87-4A76-81F1-7350990E4D6D}' />
    </worksheet>
    <worksheet name='Most Popular Friday Night Spots'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Yu Gothic UI' fontsize='18'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
          </datasources>
          <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
            <column caption='DayofWeek' datatype='string' name='[Calculation_1655072919006461952]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[date])' />
            </column>
            <column caption='AusTime' datatype='datetime' name='[Calculation_1655072919010439170]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEADD(&apos;hour&apos;, 10, [time])' />
            </column>
            <column caption='FridayNight' datatype='string' name='[Calculation_311592856839315477]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &gt;= 21 AND [Calculation_1655072919006461952] = &quot;Friday&quot;) OR (DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &lt;= 4 AND [Calculation_1655072919006461952] = &quot;Saturday&quot;)&#13;&#10;THEN &quot;Yes&quot;&#13;&#10;&#13;&#10;ELSE &quot;No&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[total_of_directions]' derivation='Avg' name='[avg:total_of_directions:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' datatype-customized='true' name='[location - Split 1]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 1 ) ))' />
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' datatype-customized='true' name='[location - Split 2]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[location]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( [location], &quot;,&quot;, 2 ) ))' />
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_311592856839315477]' derivation='None' name='[none:Calculation_311592856839315477:nk]' pivot='key' type='nominal' />
            <column-instance column='[location - Split 1]' derivation='None' name='[none:location - Split 1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location - Split 2]' derivation='None' name='[none:location - Split 2:ok]' pivot='key' type='ordinal' />
            <column-instance column='[sensor_name]' derivation='None' name='[none:sensor_name:nk]' pivot='key' type='nominal' />
            <column caption='Sensor Name' datatype='string' name='[sensor_name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;261Will_T&quot;' value='261 William St' />
                <alias key='&quot;280Will_T&quot;' value='280 William St' />
                <alias key='&quot;474Fl_T&quot;' value='474 Flinders St' />
                <alias key='&quot;488Mac_T&quot;' value='488 Macaulay Rd' />
                <alias key='&quot;574Qub_T&quot;' value='574 Queensberry St' />
                <alias key='&quot;ACMI_T&quot;' value='ACMI' />
                <alias key='&quot;AG_T&quot;' value='Alexandra Gardens' />
                <alias key='&quot;AlfPl_T&quot;' value='Alfred Place' />
                <alias key='&quot;BirBridge_T&quot;' value='Batman Av Bridge Entry' />
                <alias key='&quot;BirFed1120_T&quot;' value='Federation Square Bridge' />
                <alias key='&quot;Bou231_T&quot;' value='231 Bourke St' />
                <alias key='&quot;Bou283_T&quot;' value='283 Bourke St' />
                <alias key='&quot;Bou292_T&quot;' value='292 Bourke St' />
                <alias key='&quot;Bou655_T&quot;' value='655 Bourke St' />
                <alias key='&quot;Bou688_T&quot;' value='638 Bourke St' />
                <alias key='&quot;Bou892T&quot;' value='892 Bourke St' />
                <alias key='&quot;BouBri_T&quot;' value='Bourke St Bridge' />
                <alias key='&quot;BouHbr_T&quot;' value='Victoria Point' />
                <alias key='&quot;BouHbr2353_T&quot;' value='NAB Building' />
                <alias key='&quot;Boyd2837_T&quot;' value='Boyd Community Hub' />
                <alias key='&quot;Col12_T&quot;' value='12 Collins St' />
                <alias key='&quot;Col15_T&quot;' value='15 Collins St' />
                <alias key='&quot;Col254_T&quot;' value='254 Collins St' />
                <alias key='&quot;Col620_T&quot;' value='620 Collins St' />
                <alias key='&quot;Col623_T&quot;' value='623 Collins St' />
                <alias key='&quot;Col700_T&quot;' value='700 Collins St' />
                <alias key='&quot;Col892T&quot;' value='892 Collins St' />
                <alias key='&quot;ElFi_T&quot;' value='Elizabeth St / Flinders St' />
                <alias key='&quot;Eli250_T&quot;' value='250 Elizabeth St' />
                <alias key='&quot;Eli263_T&quot;' value='263 Elizabeth St' />
                <alias key='&quot;Eli380_T&quot;' value='380 Elizabeth St' />
                <alias key='&quot;Eli483_T&quot;' value='483 Elizabeth St' />
                <alias key='&quot;Eli501_T&quot;' value='501 Elizabeth St' />
                <alias key='&quot;Errol20_T&quot;' value='20 Errol St' />
                <alias key='&quot;Errol23_T&quot;' value='23 Errol St' />
                <alias key='&quot;FLDegC_T&quot;' value='Flinders Lane Crossing' />
                <alias key='&quot;FLDegN_T&quot;' value='Flinders Lane / Degraves St (North)' />
                <alias key='&quot;FLDegS_T&quot;' value='Flinders Lane / Degraves St (South)' />
                <alias key='&quot;Fli114C_T&quot;' value='114 Flinders St A' />
                <alias key='&quot;Fli114F_T&quot;' value='114 Flinderst St B' />
                <alias key='&quot;FliS_T&quot;' value='Flinders St Station Underpass' />
                <alias key='&quot;FliSS_T&quot;' value='Flinders St South' />
                <alias key='&quot;Fra118_T&quot;' value='118 Franklin St' />
                <alias key='&quot;Grat292_T&quot;' value='292 Grattan St' />
                <alias key='&quot;Hammer1584_T&quot;' value='Hammer Hall' />
                <alias key='&quot;HarEsB_T&quot;' value='Harbour Esplanade Bike Path' />
                <alias key='&quot;HarEsP_T&quot;' value='Harbour Esplanade Pedestrian Path' />
                <alias key='&quot;KenMac_T&quot;' value='Macaulay Rd / Bellair St' />
                <alias key='&quot;King2_T&quot;' value='2 King St' />
                <alias key='&quot;King335_T&quot;' value='335 King St' />
                <alias key='&quot;Lon189_T&quot;' value='189 Lonsdale St' />
                <alias key='&quot;Lon364_T&quot;' value='364 Lonsdale St' />
                <alias key='&quot;LtB170_T&quot;' value='Chinatown South' />
                <alias key='&quot;LtB210_T&quot;' value='Chinatown North' />
                <alias key='&quot;Lyg161_T&quot;' value='161 Lygon St' />
                <alias key='&quot;Lyg260_T&quot;' value='260 Lygon St' />
                <alias key='&quot;Lyg309_T&quot;' value='309 Lygon St' />
                <alias key='&quot;MCEC_T&quot;' value='MCEC' />
                <alias key='&quot;NewQ_T&quot;' value='New Quay' />
                <alias key='&quot;Pel147_T&quot;' value='147 Pelham St' />
                <alias key='&quot;PriNW_T&quot;' value='Princess Bridge' />
                <alias key='&quot;Que85_T&quot;' value='Queen St West' />
                <alias key='&quot;QVMQ_T&quot;' value='QVM / Queen St' />
                <alias key='&quot;QVN_T&quot;' value='State Library' />
                <alias key='&quot;RMIT_T&quot;' value='RMIT Building 80' />
                <alias key='&quot;RMIT14_T&quot;' value='RMIT Building 14' />
                <alias key='&quot;Rus180_T&quot;' value='180 Russel St' />
                <alias key='&quot;SanBri_T&quot;' value='Sandridge Bridge' />
                <alias key='&quot;Signal1647_T&quot;' value='Sandridge Bridge Signal Box' />
                <alias key='&quot;SouthB_T&quot;' value='Southbank' />
                <alias key='&quot;Spen161_T&quot;' value='161 Spencer St' />
                <alias key='&quot;Spen201_T&quot;' value='201 Spencer St' />
                <alias key='&quot;Spen229_T&quot;' value='229 Spencer St' />
                <alias key='&quot;Spr201_T&quot;' value='Lonsdale St / Spring St' />
                <alias key='&quot;SprFli_T&quot;' value='Spring St / Flinders St' />
                <alias key='&quot;Swa123_T&quot;' value='123 Swanston St' />
                <alias key='&quot;Swa148_T&quot;' value='148 Swanston St' />
                <alias key='&quot;Swa295_T&quot;' value='295 Swanston St' />
                <alias key='&quot;Swa31&quot;' value='31 Swanston St' />
                <alias key='&quot;Swa607_T&quot;' value='607 Swanston St' />
                <alias key='&quot;SwaCs_T&quot;' value='Swanston St City Square' />
                <alias key='&quot;UM1_T&quot;' value='UniMelb 1' />
                <alias key='&quot;UM2_T&quot;' value='uniMelb 2' />
                <alias key='&quot;UM3_T&quot;' value='uniMelb 3' />
                <alias key='&quot;VAC_T&quot;' value='The Arts Centre' />
                <alias key='&quot;Vic_T&quot;' value='QV Market' />
                <alias key='&quot;WatCit_T&quot;' value='Waterfront City' />
                <alias key='&quot;WebBN_T&quot;' value='Webb Bridge' />
                <alias key='&quot;WestWP_T&quot;' value='Westwood Place' />
              </aliases>
            </column>
            <column caption='Time' datatype='datetime' name='[time]' role='dimension' type='ordinal' />
            <column caption='Total Of Directions' datatype='integer' name='[total_of_directions]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]' context='true'>
            <groupfilter function='level-members' level='[Calculation_1655072919006461952]' user:ui-action-filter='[Action3_CCFF8FE1E11749949F64FDB44B68E1F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]' context='true'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_80C0258F53904EBF8820104360D8D66B]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location - Split 1:ok]' />
              <groupfilter function='level-members' level='[none:location - Split 2:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]' context='true'>
            <groupfilter function='level-members' level='[sensor_name]' user:ui-action-filter='[Action1_2EC2F8C7492D4E88A46A9D6146845667]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_311592856839315477:nk]' context='true'>
            <groupfilter function='member' level='[none:Calculation_311592856839315477:nk]' member='&quot;Yes&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([total_of_directions])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:sensor_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (DayofWeek)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Sensor Name)]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_311592856839315477:nk]</column>
            <column>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='683' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Yu Gothic UI' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' value='Avg. Hourly Pedestrians'>
              <formatted-text>
                <run>Avg. Hourly Pedestrians</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]' />
              <color column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
              <size column='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3AE95443-3614-42BB-AE82-281E61116A68}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
      </style>
      <size maxheight='1300' maxwidth='2500' minheight='1300' minwidth='2500' sizing-mode='fixed' />
      <datasources>
        <datasource caption='cleanedPedCount+' name='federated.11ee1yh03v40qj1dwjwnw0k7lrf9' />
      </datasources>
      <datasource-dependencies datasource='federated.11ee1yh03v40qj1dwjwnw0k7lrf9'>
        <column caption='Day or Night' datatype='string' name='[Calculation_466967043646042112]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF (DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &gt;= 6 AND DATEPART(&quot;hour&quot;, [Calculation_1655072919010439170]) &lt;= 21)&#13;&#10;THEN &quot;Day&quot;&#13;&#10;&#13;&#10;ELSE &quot;Night&quot;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_466967043646042112]' derivation='None' name='[none:Calculation_466967043646042112:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98770' id='66' param='horz' type-v2='layout-flow' w='99360' x='320' y='615'>
            <zone h='98770' id='61' param='horz' type-v2='layout-flow' w='99360' x='320' y='615'>
              <zone h='98770' id='58' param='horz' type-v2='layout-flow' w='99360' x='320' y='615'>
                <zone h='98770' id='43' param='horz' type-v2='layout-flow' w='99360' x='320' y='615'>
                  <zone h='98770' id='41' type-v2='layout-basic' w='99360' x='320' y='615'>
                    <zone h='98770' id='24' param='horz' type-v2='layout-flow' w='71040' x='320' y='615'>
                      <zone h='98770' id='22' type-v2='layout-basic' w='71040' x='320' y='615'>
                        <zone h='98770' id='8' param='horz' type-v2='layout-flow' w='30352' x='320' y='615'>
                          <zone h='98770' id='9' param='vert' type-v2='layout-flow' w='30352' x='320' y='615'>
                            <zone forceUpdate='true' h='11384' id='3' type-v2='text' w='30352' x='320' y='615'>
                              <formatted-text>
                                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Yu Gothic UI Semibold' fontsize='36'>Melbourne CBD Pedestrian Overview</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='10' />
                              </zone-style>
                            </zone>
                            <zone forceUpdate='true' h='3077' id='77' type-v2='text' w='30352' x='320' y='11999'>
                              <formatted-text>
                                <run fontcolor='#000000' fontname='Yu Gothic UI'>Data taken from:</run>
                                <run>Æ&#10;</run>
                                <run auto-url='true' fontcolor='#000000' fontname='Yu Gothic UI' hyperlink='tabdoc:load-url url=&amp;quot;https://discover.data.vic.gov.au/dataset/pedestrian-counting-system-counts-per-hour&amp;quot;'>https://discover.data.vic.gov.au/dataset/pedestrian-counting-system-counts-per-hour</run>
                              </formatted-text>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='84309' id='10' param='horz' type-v2='layout-flow' w='30352' x='320' y='15076'>
                              <zone h='84309' id='11' param='vert' type-v2='layout-flow' w='30352' x='320' y='15076'>
                                <zone h='84309' id='12' param='vert' type-v2='layout-flow' w='30352' x='320' y='15076'>
                                  <zone h='29282' id='14' name=' Avg. Hourly Pedestrians by Week' w='30352' x='320' y='15076'>
                                    <layout-cache minheight='200' minwidth='156' type-h='scalable' type-w='scalable' />
                                    <zone-style>
                                      <format attr='border-color' value='#f5f5f5' />
                                      <format attr='border-style' value='solid' />
                                      <format attr='border-width' value='1' />
                                      <format attr='margin' value='10' />
                                    </zone-style>
                                  </zone>
                                  <zone h='26743' id='13' name='Hourly Pedestrians Relative to Average by Day of Week' w='30352' x='320' y='44358'>
                                    <layout-cache minheight='167' type-h='scalable' type-w='cell' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='10' />
                                    </zone-style>
                                  </zone>
                                  <zone h='28282' id='15' name='Avg. Pedestrains by Time of Day' w='30352' x='320' y='71101'>
                                    <layout-cache minheight='187' type-h='scalable' type-w='cell' />
                                    <zone-style>
                                      <format attr='border-color' value='#000000' />
                                      <format attr='border-style' value='none' />
                                      <format attr='border-width' value='0' />
                                      <format attr='margin' value='10' />
                                    </zone-style>
                                  </zone>
                                </zone>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                        <zone h='98770' id='68' is-fixed='true' type-v2='layout-basic' w='40688' x='30672' y='615'>
                          <zone h='98770' id='75' is-fixed='true' type-v2='layout-basic' w='40688' x='30672' y='615'>
                            <zone h='9000' id='16' param='vert' type-v2='layout-flow' w='40688' x='30672' y='615'>
                              <zone fixed-size='101' forceUpdate='true' h='9000' id='29' is-fixed='true' type-v2='text' w='40688' x='30672' y='615'>
                                <formatted-text>
                                  <run fontname='Yu Gothic UI' fontsize='14'>Swanston St, which was partly pedestrianised in the early 90s, is the most popular walking street in Melbourne. Similar works were planned for Elizabeth St before the beginning of the COVID-19 pandemic in 2019</run>
                                  <run>Æ&#10;&#10;</run>
                                  <run fontname='Yu Gothic UI' fontsize='14'>You can filter by sensor by clicking the area you want to investigate</run>
                                </formatted-text>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='10' />
                                </zone-style>
                              </zone>
                            </zone>
                            <zone h='89770' id='76' param='vert' type-v2='layout-flow' w='40688' x='30672' y='9615'>
                              <zone fixed-size='647' h='51307' id='18' is-fixed='true' name='25 Busiest Locations by Sensor' w='40688' x='30672' y='9615'>
                                <layout-cache type-h='fixed' type-w='fixed' />
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='10' />
                                </zone-style>
                              </zone>
                              <zone h='38463' id='17' name='CBD Map' w='40688' x='30672' y='60922'>
                                <layout-cache minheight='248' type-h='scalable' type-w='fixed' />
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='10' />
                                </zone-style>
                              </zone>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='98770' id='46' is-fixed='true' type-v2='layout-basic' w='28320' x='71360' y='615'>
                      <zone h='98770' id='49' is-fixed='true' type-v2='layout-basic' w='28320' x='71360' y='615'>
                        <zone h='98770' id='50' param='vert' type-v2='layout-flow' w='28320' x='71360' y='615'>
                          <zone fixed-size='579' h='45153' id='78' is-fixed='true' name='Most Popular Days by Sensor Location ' w='28320' x='71360' y='615'>
                            <layout-cache type-h='fixed' type-w='fixed' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone fixed-size='79' forceUpdate='true' h='7615' id='48' is-fixed='true' type-v2='text' w='28320' x='71360' y='45768'>
                            <formatted-text>
                              <run fontname='Yu Gothic UI' fontsize='14'>There are different areas of the city that are more popular at night time or at day time. Day time hours are defined as between 6am and 9pm, and night time hours are between 9pm and 6am</run>
                            </formatted-text>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='10' />
                            </zone-style>
                          </zone>
                          <zone fixed-size='771' h='46002' id='40' is-fixed='true' name='Highest Traffic Area by Day/Night Hours' w='28320' x='71360' y='53383'>
                            <layout-cache type-h='fixed' type-w='fixed' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='10' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11077' id='59' mode='radiolist' name='Highest Traffic Area by Day/Night Hours' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_466967043646042112:nk]' type-v2='filter' values='database' w='6360' x='71760' y='61154' />
        <zone h='6000' id='62' name='25 Busiest Locations by Sensor' pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' type-v2='color' w='5520' x='65480' y='10077' />
        <zone h='6077' id='67' name='Highest Traffic Area by Day/Night Hours' pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' type-v2='color' w='7560' x='71800' y='57385' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2500' minheight='2500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='86' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98770' id='85' param='vert' type-v2='layout-flow' w='99360' x='320' y='615'>
                <zone forceUpdate='true' h='11384' id='3' type-v2='text' w='30352' x='320' y='615'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Yu Gothic UI Semibold' fontsize='36'>Melbourne CBD Pedestrian Overview</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='101' forceUpdate='true' h='9000' id='29' type-v2='text' w='40688' x='30672' y='615'>
                  <formatted-text>
                    <run fontname='Yu Gothic UI' fontsize='14'>Swanston St, which was partly pedestrianised in the early 90s, is the most popular walking street in Melbourne. Similar works were planned for Elizabeth St before the beginning of the COVID-19 pandemic in 2019</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontname='Yu Gothic UI' fontsize='14'>You can filter by sensor by clicking the area you want to investigate</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45153' id='78' is-fixed='true' name='Most Popular Days by Sensor Location ' w='28320' x='71360' y='615'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51307' id='18' is-fixed='true' name='25 Busiest Locations by Sensor' w='40688' x='30672' y='9615'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6000' id='62' name='25 Busiest Locations by Sensor' pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' type-v2='color' w='5520' x='65480' y='10077'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3077' id='77' type-v2='text' w='30352' x='320' y='11999'>
                  <formatted-text>
                    <run fontcolor='#000000' fontname='Yu Gothic UI'>Data taken from:</run>
                    <run>Æ&#10;</run>
                    <run auto-url='true' fontcolor='#000000' fontname='Yu Gothic UI' hyperlink='tabdoc:load-url url=&amp;quot;https://discover.data.vic.gov.au/dataset/pedestrian-counting-system-counts-per-hour&amp;quot;'>https://discover.data.vic.gov.au/dataset/pedestrian-counting-system-counts-per-hour</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='29282' id='14' is-fixed='true' name=' Avg. Hourly Pedestrians by Week' w='30352' x='320' y='15076'>
                  <layout-cache minheight='200' minwidth='156' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#f5f5f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='26743' id='13' is-fixed='true' name='Hourly Pedestrians Relative to Average by Day of Week' w='30352' x='320' y='44358'>
                  <layout-cache minheight='167' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='79' forceUpdate='true' h='7615' id='48' type-v2='text' w='28320' x='71360' y='45768'>
                  <formatted-text>
                    <run fontname='Yu Gothic UI' fontsize='14'>There are different areas of the city that are more popular at night time or at day time. Day time hours are defined as between 6am and 9pm, and night time hours are between 9pm and 6am</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11077' id='59' mode='dropdown' name='Highest Traffic Area by Day/Night Hours' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_466967043646042112:nk]' type-v2='filter' values='database' w='6360' x='71760' y='61154'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46002' id='40' is-fixed='true' name='Highest Traffic Area by Day/Night Hours' w='28320' x='71360' y='53383'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6077' id='67' name='Highest Traffic Area by Day/Night Hours' pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' type-v2='color' w='7560' x='71800' y='57385'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38463' id='17' is-fixed='true' name='CBD Map' w='40688' x='30672' y='60922'>
                  <layout-cache minheight='248' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='28282' id='15' is-fixed='true' name='Avg. Pedestrains by Time of Day' w='30352' x='320' y='71101'>
                  <layout-cache minheight='187' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B54EEF84-628F-4E88-9E3D-E6C837200FC0}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name=' Avg. Hourly Pedestrians by Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DE6950AC-F83D-4AF9-BE47-9EE5BEFBB918}' />
    </window>
    <window class='worksheet' name='Hourly Pedestrians Relative to Average by Day of Week'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_1655072919008141313:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{247C3EC9-A443-428E-901B-2CB9E4F8C42A}' />
    </window>
    <window class='worksheet' name='Climate Overview'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0C287461-98A6-417B-A1B8-156B58DE3D4A}' />
    </window>
    <window class='worksheet' name='CBD Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD0C8FD8-A5EA-4002-9410-68526B87BCAD}' />
    </window>
    <window class='worksheet' name='Avg. Pedestrains by Time of Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1AEDC975-CF53-4014-90EF-85EA42760F97}' />
    </window>
    <window class='worksheet' name='25 Busiest Locations by Sensor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_311592856648318979:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78BEC1FE-68A2-48F7-821D-2347074261A9}' />
    </window>
    <window class='worksheet' name='Avg Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:date:ok]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:date:qk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5A04ECF-E617-43E7-BA15-6A45C31AD70F}' />
    </window>
    <window class='worksheet' name='Highest Traffic Area by Day/Night Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_466967043646042112:nk]' show-exclude='false' show-mode='false' show-search='false' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_466967043646042112:nk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:total_of_directions:qk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[sum:Calculation_311592856652591108:qk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_311592856665116690:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9CCD9BA-C8DB-4726-A108-4765C89983AB}' />
    </window>
    <window class='worksheet' name='Most Popular Friday Night Spots'>
      <cards>
        <edge name='left'>
          <strip size='249'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[avg:total_of_directions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[Action (Latitude,Longitude)]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_311592856839315477:nk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_466967043646042112:nk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:total_of_directions:qk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[sum:Calculation_311592856652591108:qk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[usr:Calculation_311592856665116690:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{756DAB28-6B4B-4C71-9AAD-FE22C0D50D21}' />
    </window>
    <window class='worksheet' name='Most Popular Days by Sensor Location '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:Calculation_1655072919006461952:nk]</field>
            <field>[federated.11ee1yh03v40qj1dwjwnw0k7lrf9].[none:sensor_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4ACE2EDB-33BF-4186-9757-6F2C5ECD1D46}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name=' Avg. Hourly Pedestrians by Week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='25 Busiest Locations by Sensor' />
        <viewpoint name='Avg. Pedestrains by Time of Day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CBD Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
          <map-navigation value='1' />
        </viewpoint>
        <viewpoint name='Highest Traffic Area by Day/Night Hours' />
        <viewpoint name='Hourly Pedestrians Relative to Average by Day of Week'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Most Popular Days by Sensor Location ' />
      </viewpoints>
      <active id='62' />
      <simple-id uuid='{4A89358B-788C-4BDD-A70C-DCAA2A8BB303}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name=' Avg. Hourly Pedestrians by Week' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZdElEQVR4nO3daXAj53kn8H9fQOMkTt7gfQ/nFKVYI+u2rJHL8dpJ5MSVyJHL8REnla3K
      5/2837eScpV342yS3VTiJGU7cexoZXt0jUYaSaO5xZnh8ARJECQBonEQZ/e7H2jCwxCcaZAg
      CKCf35cZAmj0C6Cf7vd43rc5xhgDIQbFH2Rjxhgofkg9O1AAaJqG6enpSpWFkKo7UAAQUu8o
      AIihiXpeFAwGIYoiFEUBYwyZTAbj4+PgeZ7aAaSu6QoAt9uNyclJOJ1OLC4uoq+vD+l0Gjab
      DZqmQVXVwy4nIYdCVwDwPI/+/n5omobu7m5Eo1E4nU6oqgpBECCKut6GkJqj68i1Wq2wWq3F
      v9vb2w+tQIRUEzWCiaFRABBDowAghkYBQAyNAoAYGgUAMTRd3aDbI72MMXAcB8YYeJ5ih9Q/
      XQGQSqVw48YNZLNZmM1mCIKA8fFxmM1mqKqKQqFw2OUk5FDoCoBIJAJVVWG1WpHNZiGKIjiO
      A4C6HglmjCGrZiCLlqMuCtFhuwZSSbqO3O7ubnR3d+96vN5zgILxOfz73R/ijyf+vOJfLKms
      ZC6BH9/+AV4eewVm0Vyx9zV0RT6ozCOcDGFtM3zURSEPcXn5faTySbyzcL6i72voAFhKBPHp
      rmdxLXz5qItCHiCv5nBr7Tq+euJbmN64g8jmesXe27ABwBhDNL2Op7qfx8zGFDSmHXWRyB6u
      hz/GiO8YLJIFL/b/Jl67969gFfq9DBsA6cImTIIJZlGG1+JHUJk/6iKREjSm4XLoEh7reAIA
      0OPqhyRIuBe9W5H3N2wALCcW0WJrAwCcap3AlZUPjrhEpJSpyG34rS2wmxzFx84NfAE/n/kp
      8mr+wO9v2ABYjM+jw9kFAOh1DWAluYyCdvAvlFQOYwyXli7gye7ndjzuNLtwouUMLgbfOvA+
      DBwAC+j8VQAIvIAeVx/uRm4fcanI/ULJJYi8BJ+1eddzn+r8NCbXbyCW2dD9fowxaExDOr+J
      +dgMLi1e0J8KMT8/D0mSIMsyVldXMTw8rP+T1BiNqUjlk/BYfMXHTrc+hl/M/gxj/uNHWDKy
      jTGGdxbO42zgqZLPi7yE53rP4fXpn+DlsVceOI6TU7N4f/ECpqK3kS1kYBJMaLG1ocXeri8A
      JicnsbKyAlmWkc/n0dfXh3g8DofDUZepEKl8EhJvgqZq0LDVm+CRfdjMpZDMJGhkuAYo2RiS
      2Tg67F17Hl99TYP4cOki7kXuoNc1sOt5BoZbq9fx7uIbONP2GH5n5Pdhk+w7XqMrAMbGxtDS
      0oLNzU1IkoR4PI6Ojg4wxuoyFSKshNDp7NpV7hHfOG5Hb2Ki/fEjKhnZ9sHsu3is4wlIovTA
      131u8Ev4x1t/g2+c+TOI/NbvyRjD+uYqfnbvx2gyu/DqqW/DZrKX3F53G8Dr9SIQCKC1tRVD
      Q0N1nQ0ajM8X6//3O95yCtdWaFDsqKXzm5hXZjCqozrqtngw4hvHB0vvAgCyhSxeu/dv+Nc7
      /4Tne1/CF0d+d8+DH9B5BWg0K8llPNL2G7sebzK7IfAiYpkNuGT3EZSssRW0Agpa/qFVzI9D
      H+BEy5niGf1hngg8g7/6+C8g8Sa8v/g2zgaexosDvwmee/hJun5P4/ukMRXxrIIms2vXcxzH
      4UTLGUqNOARrm6v4q4//At//+C/x+vS/I1NIl3xdQSvgWvgyTrc+qvu9TYIJ5wb+C9Y3w/j6
      mT/FI+2f0nXwAwYMgFQuBYto2bPXYNQ3jlur1+p6ucdaKjtjDLfXb+Gfbv0dvjD8Mr498edw
      yR789ZXv4sPl96BqOxu4k2s3MOQdhUWy7vGOpfW5B/DS4BdhlWxlbVfzAVDptUcX96j/b7NI
      VvitLQgllyq2z2p7Y+71mii/xjT8fOanuLz8Pr526jtod3RC4AU81nEWf3TmT7GRjuB7l/8H
      7kYmi3307y++U9VOiJoPAJWp+Psb369YECzE59Dp3D234X4nWx/B5dCliuyv2hhj+Dh0CVdC
      R5vakcjG8X+u/y9IvISvHP8arP/pjG4SzPhs/+fxyolv4Fr4Mv731e/ig6V34bZ4q9r+qvkA
      EHkRVsmGqejBR2kZYwglltBqf/DSjr2uAczFpnddnutBLLMBm2RHKLF0JFUhxhjmY7P4u+v/
      E2c7n8azvS8+sD7uMDvx8tgf4HODX8JcbBrP9LxQxdLqDADGGDRNK/5b7YGvZ3s+iwsLbxz4
      B1WZimQu/tAzjCRI6G7qw7wye6D9HYW52DRG/ePgOB6xTLSq+2aM4aPl9/D6zE/w+8e/jkHv
      iO5tW+3t+L3xV0umPRwmXf1MyWQSN2/eREtLC8LhMCRJwtjYWNUmxTukJtglB6ajU+hp6tv3
      +yjZGFxmr67ynmqewKXlC+hy9O57f0fhXvQOJtoeh8hJmI5O4VRLU9X2vbq5gqsrl/HK8W9C
      5MW6yBDQFQAbGxvQNA3JZBK5XA6iKBYHwqo1EvyZ/pfwo8kfoP/0d/Y9fzcUXURnU0BXeTua
      Ali7F4aKAsyivK/9VZvGNKynV9HRFIDVZMX52dcw0fGpquybMYaLi2/h+b5zkE318X0BOgOg
      q6sLXV27e06qOSneY/GhSXZhNnYPfe7Bfb1HMD6PIc+ortcKvIAh7xjuRiZxvOX0vvZXbUom
      Bptkh0kwwW9rQTynoKAVdA8oHUQip0DJxtDj6j/0fVVSzTeC7/d09wt4Y/b1fbUFGGNYSSyj
      xd6me5tj/hO4uXat7H0dlbnYNHpcW1VEnuPht7ZgObFYlX2/F3wHE236B6BqRV2V1mf1w2F2
      Yi42U/a2KlOR07I7ZhY9TLOtFbF0tG4mysxsTKHf8+s09WHvWEV6zx4mnd/E9MZdHGs+eej7
      qrS6CgCO4/Bsz4t4c778q0AiG4fd5Cxrm+2JMvOx2u8N0piG9c3V4jRPYGv+7L3I7UPvDr2y
      8iFOtz5alapWpdVVAABbVwGzYC67i3IhPofAA0aA9zLsO4brq1fK3q7alEwMNpN9x0FoM9lh
      FmWk8slD229ezePqykc43aY/d6eW1F0AcByH53rP4Y25/1fWmS2ozCLg7Cl7fwFnD5bi8zW/
      bMpcbLpk50BXUw+mK7SCQim31q5h0DNSt5OI6i4AAKDF1gazICMY17eUCWMMoWR5DeBtkiCh
      zd6JleRy2dtW0169Y2P+E5iKTh7KPjWm4cPl9/CpzicP5f2roS4DYOsq8CLOz76m6ypQ0PLI
      qdmyMwW3HWs+iZurV8vappo3ENeYhkh6reQoqs/ajEh6/VDSOqajd+G1+OAwl9e2qiW6UyFi
      sRhCoRBSqRSCweCRp9y22NpgEsy6rgLRdGTHBPhy9br6MRUtrzE5F5vGDyf/oSrf01b/v6Nk
      I1TkRbhlD9Y2Vyu6T8YY3g2+iSe7nnv4i2uYrmb7ysoK5ufnMTQ0hCtXrqCjowPxeBx2u/1I
      J8U/FXgeP5/5KV45/o0Hvi6ozKHb2bvvcgoQ4TA5EU6EdOeqvDn3OrKFLGY3ptG1j7ZHOWY2
      ptDl7Nnz8/W7hnF77SZ8cuXybELJJUi8CW6dqSW1SlcAmM1m2Gw2LCwsoLu7GxsbGwgEAgCO
      9v4AHU0BmAQT7sXuYMR3bM/XLSUXcab1sQOVc7z5FKaVu2h1Pvwm4YvxeZhFGZ8f+m385O6/
      4Gun9p++ocecMo0nAs/s+fkGfcP44eQ/4pnez1Zkf1tpD2/i011777Ne6KoCeTweHD9+HKdO
      nUIgEMCJEydq4oNzHIcvjvwuLgbfwi9nXyvZU8MYw2pqBc221gPta9g7httrNx/6OsYYLgbf
      xpNdz8Fva4Fb9uL2+q0D7ftBNKZiPbX6wCuT0+xCtpBBKleZ7tCNTBSpfApdTfWVKFhKXTaC
      72cz2fHqqW+BA/C3176HRDa+4/m8loemqQe+qYJVskEDQzyrPPB10XQEyVwcgaYeAMCzvZ/F
      2wu/hKodTt5ULBOD3Vy6/n+/fs8wgvG5iuzzveDbeDzwVEPcVKTuAwAAeE7Ac73n8FTX8/jb
      a9/b0e8dTa9XJMec4ziM+sZxL3pnz9dsNwwf73y6+JhL9iDg7MYna9cPXIZSpqOlF4X6zwY9
      w7i9/smB95fKJbGgzGLQoz/Xv5Y1RABs6/cM4Q9PfgvvLJwvVokW4wvFRXAP6pj/BD5Zu7Hn
      88lcAqHkEoZ9Yzsef6r7ebwbfBOFQ+iKnNGZHdvm6MRKcunA6+pfWnoXj3acrcu0h1IaKgCA
      rSl2Xz35jWKV6Pb6rQdOgi+HS/YglU/suaTHh8sXMVFiSQ67yYEh7yg+rvA8Y1VTdV/hTIIJ
      TWYX1jfX9r2/dD6NqegkTrY8su/3qDUNFwDAzirRZj65I0HsIDiOQ3dTX8lqUKaQwSdrN3C8
      ufTcgbOBp/Hh8nvIqdmKlAXYqt45TE7dZ+MBzzCmHlCFe5gPly/iVOsEJOHByxXWk4YMgG39
      niF885H/WtEf7ETLGdyJ7K5LX135EKdaJ2ASTCW3k0ULTracwaXFCxUry8zGVFmTgwY8I/tO
      i0jn07i1eq2sBavqQUMHwGFosbVhLbW6oz5f0Aq4uvJRyeUW7/dYx6dxc+0a0vnNipRluswA
      aJK3ukOzhfKvQpdD7+Nk6yMwCZW7RWkt0HXtzOfzuHnzJmRZhqqqyOVyGB8fhyAIVc15qQU8
      x6PV3oYFZQ69v5r+98nadXQ19UIWLQ/8LiRewmPtZ3Fh4Q18pu9zBypHQStgIx2B39qs+/vn
      wKHdEcCCMosBj/77O+TUHG6uXsXXTn2n4X5rXQEwOzuLZDIJs9mM1dVVdHZ2IpvNwmq1FpdK
      MZIx3wncCF9Bt7P3V6uZXcDLo3+g63s43nwG37/yl5hoexxO8/5XbFhLheGSPQDjykrVHvEe
      w+T6TfS59F85Plp6D8f8JyByYsP91roCYGhoCF1dXUin0xgYGICiKMWbY/A8D0EQDrucNaXX
      PYA35l8Hx3MIxubgtzbDbfXo2laAgCe7n8M7wfP4wvDv7LsMc8oMBrzDZX/3gaZu/HL2P6Ci
      oKs6k1OzuLF2Ba+e+uOG/J11twFkWYbb7YbJZILf7z/MMtU8SZDglj0IJ0O/uo3P0w/f6D6j
      vuNYTa3g49AHiKbX9zU+MBe7V9ZZfJtZlPFI+2/gh5P/oGt0+vLyJRxrPgm5TpaGKVdjjGYc
      gSHvKH4x+x8QOKHsiTYCL+DLx17BtZXL+NnUjxHPKnCYnOhwBtDj6ke7oxMmwbznCgsFLQ8l
      E4PXur8U74n2x5HMJfGzqR/h80O/vWdKQ07N4mr4I7x68tv72k894NgBWjWqqmJ2dhYDAw8f
      im80m/kU/vs7/w3ffOTPDpwUxhiDko0hqMwhGJ9DKLGEjJqByEsQOAE8x4HnBAi8AA4cGGOw
      mxz40ujvHWifP536EWwmO57pfqFkELwXfBs5LYenuz9zkI9X0ygADmB7od3DSApTNRUMbOtf
      pkFlKlT268fsJvuBuyRVTcU/f/J/MeAZxkT7zhXkcmoOf33lu/jDk98se63+ekJVoANoc3Qc
      2nsL/FaD8zBzbgRewG+NfgV/f+P7sJvsGPGNF5+7EvoAQ96Rhj74ARoIMzyTYMKXx17BW/O/
      QFCZA7B19v9o+f26nuyuFwUAgc1kx5fHvop/u/svWN9cw7WVyxjxHdv3IgL1RNf1VVXV4v0B
      BEFAoVCA2dxYQ+JG57Z48FsjX8EPbv4NNDB8/fSfHHWRqkJXAMRiMczMzCCTyYDneVgsFgwP
      DxdTI+p5UjT5Nb+lBS/1fxFKVoGJMxvid9UVABzHQZZlcByHXC4HTdOKo4L1eKd4src+7/6W
      nq9Xuo5cj8cDj2f3UH817w9AyGGgRjAxNAoAYmgUAMTQKACIoVEAEEOjACCGRgFADE3XOEAi
      kUAkEoEgCJBlGaurqxgZaYyl8Yix6QoAQRAQj8eRTCaRzWbR39+PZDJ55PcHIOSgdAVANpuF
      3++H1+uFyWSCoihwOp3FlAhKhSD1SteR63a7d/xt9EnxpHFQI5gYGgUAMTQKAGJoFADE0CgA
      iKFRABBD0xUAhUKhOBWyUCggnS59iyBC6o2ucYB4PI7p6Wm43W6Ew2HYbDYMDg7SpHhS93QP
      4cqyjEwmA8YYCoUCTYonDYEmxRNDo0YwMTQKAGJoFADE0CgAiKFRABBDo/5LUjXZbBaFQuFQ
      7qizXxQApGoYY5BluaZut6p7Uvzm5iY0TYPdbkckEkF3d/dhl42QQ6crAERRRDgcRkdHB65f
      v46Ojg7E43GaFE/KoqoqJEk66mLsoCsA0uk07HY7lpaW0NPTg2g0ikAgAIBSIYh+tXii3Fcq
      REfH1t0RKRWC1DvqBiWGRgFADI0CgBgaBQAxNAoAYmgUAMTQKACIoem+U/zCwgIEQUChUECh
      UMD4+DhEUQRjDJqmHXY5SQNgjB11EXbRdQXgOA6MMTDGsLGxAYvFgnw+D6A2PxSpTbV4rOi6
      AphMJgwMDEDTNAwPDyOVShXzgHieB89TTYo8XC0eJ7oCwGKx7Pjb5XIdSmEIqbbaC0lCqogC
      gBgaBQAxNAoAYmgUAMTQSgbA6uoqLl++XJP9toRUUsluUEVRkEwmi/cBzufzKBQKYIzBZDIh
      k8nAbrdXu6yEVFzJAIhGo3A4HMX1W3K5HKamppBKpaBpGpqamtDX1weLxUKT4oludTMp3u12
      Y2pqCqdPnwYAhMNhWK3W4h1i8vl88YPQpHiiVy2eKEseudlsFna7vVgF6uvrK7kxTYon9W5X
      IziZTMLhcEAUxZpawo6Qw7ArAGw2GyYnJ+ngJ4awqwrEcRz6+/uhaRo0TavJDD5CKqXk0c0Y
      w/LyMh38pOGVPMILhQKSyWS1y0JI1e15Bejs7Kx2WQipupK9QDzPI5vNHkV5CKmqXY1gRVFQ
      KBR29PErioL19XVIkgRZlrG6uoqRkRHqKSJ1r+RAGGMMHMcVe4F4nocoilhcXEQmk0F/f/+O
      ecG1OMJHak9dpELY7XaYzWa43e5iL1A6nYYgCOjt7YXZbIaiKHA6ncWRYkqFIHrU4oly15Fr
      Nptx/vx5dHZ2YmJiAgDQ3Ny84zX33yuAkHq2qxEcCoVw5syZ4kAYIY1sVwD4/X4sLy+DMUYD
      YaTh7aoCbU962V4Njnp6SCPbdYp3OBxwOBwIh8NHUR5CqmpXADDGYDabIUkSzQkmDa9k/+Wd
      O3eoDUAMYdcRznEcfD4fzGZzsRcokUhgeXkZ6XQaGxsbmJmZoasDaQi7rgALCwvw+/2QZbl4
      BTCZTIjH41haWkIsFsPQ0BDdKZ6UrS5Ggjc3N8HzPGRZLj4WDodhsVjg8/kQi8WQSCSK2aI0
      Ekz0qsUT5a4jd2RkBAB2zAfo6uoq/t/n8xX/T5PiSb0r2cpdWFjApUuXMD8/X+3yEFJVJQNA
      URTwPE9neNLwSgaA1+uF2Wzecz0gQhrFnlMit1MhCGlkuxrB6+vruHDhAmRZpjwg0vB2XQG8
      Xi9eeOEF+Hw+ugKQhldyYSyPx4MnnnjiKMpDSFXpGsFSFAVra2swm81QVRWJRAKjo6NURSJ1
      T1cAcBwHk8kEnucRiUTgdrtpUjwpW12kQpSSzWbBcRyy2SwCgQASiQRNiidlq8UTpa4j1+/3
      7/jb6/UeSmEIqTZK+CeGRgFADI0CgBgaBQAxNAoAYmgUAMTQdHWD5nI55HI5AFtrh6ZSKbhc
      rkMtGCHVoCsACoUCpqenIYoi1tbW4Pf7IYoi3SmelGU/I8GapiGXy+2Yo65HOp0umdGcTqdh
      sVgAbB3XugJgZWUFVqsVmUwGbrcb2WwWJpMJAE2KJ/rtdaJUVRVvvfUWOI7D4OAgkskkZmdn
      0dfXB7PZjKtXr+LRRx/F+vo6mpqaigu3Xb16tZiOY7PZAGyl8589exaRSASZTAZtbW07ctms
      VmvxXtj5fF5fANCd4slhyufzsNlscLlcuHLlCl566SWEw2HE43GkUin4fD5cvHgRsixDVVWc
      O3cOiUQCbW1tiMViEAQBjDF0dXVhY2MD+XwewWAQoijCZrNhfn4eHMchlUohFAqB4zhkMhkk
      Eglw7ABJ/6qqYnZ2FgMDA5X8PkiDymQykCQJgiDseJwxhvn5eeRyOfj9fiiKAmArMJxOJ0Kh
      EDo7O7GysgKv14vm5mYsLy8jEonA6/WC53ksLy/D7/cjmUxidHQU0WgU0WgU7e3txVw2TdOg
      qirW19dhs9nA8zwFAKmevQLgKFHlnTQsVVURjUYhSRIkSUIikYDL5UIqlQIAWCwWCgDSuFZW
      VjAzM4NgMAiLxQK73Y50Oo3m5maoqopsNksBQBqX0+mELMsYGRmB2+2GKIrY2NhAoVCApmnw
      +/3UBiDVU4ttAEqFIIamqwqUSqUQiUSQTqchSRKSySTGxsZoUjype7oCwGq1YnFxEfF4HLFY
      DIODg9jc3ITNZqNUCKJb3U6KB4C2tjbY7XYMDg5CURQ4HA6aFE/KUosnSt3LojidTjidTgCg
      TFDSMKgRTAyNAoAYGgUAMTQKAGJoFADE0CgAiKFRABBD050KEQwGkUwm4XQ6oSgKjh8/DkmS
      irNsCHkYTdOOugi76E6F2J5StrS0BI/HUxzW5jiOcoKILrV4nOjOYejv74eqqhAEAfl8vrgk
      Csdx4HmqSZGHq9sA4DgOoigWc34o94c0Cjp1E0OjACCGRgFADO3/AyfoPtj/viXRAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='25 Busiest Locations by Sensor' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Temp' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg. Pedestrains by Time of Day' width='192'>
      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
      eNr/AzhocUHA8Bh6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CBD Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Climate Overview' width='192'>
      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
      SJcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd5hU1fn4P3On192d7b2wNOm9F+kqiiKIYkGTaDQxMcaYbxKN6f6MJZZY
      YsUGFkClKIKgCEiRXrf3Xmd2yk6f+/tjYWBhd2nLgu79PM8+O/fec9/7zpnz3tPe8x6Z0+kU
      kZDopgiXWgEJiUuJZAAS3RrJACS6NZIBSHRrJAOQ6NZIBiDRrZEMQKJb84MwgJLsffzrX09j
      84GroYR//etfFFTbLrVaPzp2fv05Ly/++KLI9jU38sy/n6Ck9vL63S66ATz6i/no9Xru/9tL
      p127f8FU9Ho9/3prZYcySnL28fjjT2P3g6uxhMcff5yCavvFUrlTqSvP51d33056cjx6vYEe
      vfvx2aa94KogTq9Hf+wvNbMvf3tuMcdnJedPGhC6Zo6OZdK0a3h96UqC7UxbjuxxQlZiWk8e
      +NPjNPvObY7z+68/55W3l53f96ws4bM1X7Z73VKWzzPPPsu+7OLzkn+x6JIaICI8jOXvvY3D
      f+IHsVce5eONWYTpukKDS0N96VEmT5jANwfK+MczL7N+/Tqe+MvvMKjloTT/79WPKMjL5jcL
      Z/DkI7/i28PVoWtT597Jt99+y5pPlzF9RAYP37OQ3z7+arvPu+t3j3Nw/z7++8/fsuSlf/Hk
      qxfnbd4WH778bx76+3PtXo/pPZLK6hqunziwy3Q6GxRd8ZA+YyZTuPlzPtmwmztmjQDgo3ff
      YsDUaVR8teJEQtHP0tdf5OM1G9BFxHH/g//H2ME925RprSnmt794jOyyembPv5P77rgBGeC2
      N/C/l17g6627UejCuPHWn7BwzjRkwH0LZzF83sP8dO5UOOX4rw/chabXBISqQ9RoMrh5TCJ/
      fmo5f/vnvbz0zAu4BSN//Ms/GNIrCYCDOzby3IuvU2f3cvW827n39pbnn8wTf34YmzaVPRvX
      EWNUt5wcN67lv6sCAIPRRFxCMjOnTuTRZxajUp34ScyxCQwfPhyAseMnopN5eOyZf/Lwr39K
      ovH0ny48KoYePXvRo2cv3nn5eXbt3QMswFJdwpP//jcHcorpN2wCf/rDQ0ToVYh+N6+98DRr
      Nmwjtd8IYoP+VvJ2bFzFi6+/i90rMO/2u7n9humAyMolr7Nkxee4AnJ+ev8fCJZ+x2vLvqSx
      0c2sWbN49Mk3KP7ufTZmu7l2iJm3v8ll2dO/Yc7t9/Pok28wfmASX322lKXLV1HdaGfImKk8
      8offoFcKPPH7+3DHD6WHupGPP99M72ET+fuff49OeWrudg5dUgMoDAncPn8m7yx+u+VEwMXb
      73zAnXfdhs9zIt0r/3iQP//3Q+669wHG9IzgutmzKbN625T5zBOPM3DMNCYOTOX3993G+2t3
      gejlrrlX8fqKb5m/8A4mDErl/luv57UVmwDYs3MLRRW1IRknHx/Zv5u3nnucvZVeMpJisdRW
      sGXLOp55eQnX3jCPyqPb+On9vwcgf+9Gps++mSvGX829dy3g2T/czRufbm2toOhk3ZebueHm
      RScKfxt8seJ9/vG3x7jrwb/zu38+z5heUe2mvW72bERPI3sPl7SbBqCpuoCjxdX0zMgg4Grk
      uplTKG428PDvfkvetk+5+6F/APDSPx7iT0+9ybQ58xmUauStDz4Nydi7cRmzb76X8Vcv4K4F
      V/GHuxfw6dYj7Pz8HRbe/xdm3XQn999zB/g9DJ80i8kjB6KPTubhhx+mV3IEJQXZbFi9hFeX
      baJ/n54EvQ62bNlCg9UFwJZt27lm/u3cf8/tLPvfv/jPG58AkH1wD2889wQFTj3XzhzLW//5
      O68sXdvh970QuqQGALjzrp/yzNQ7yKr+N+5DqygIJHPj9OH89XgCfxMvvPQus3/+GBEGNRET
      ZxD23Mts2LybHm3I+9X//Z3bZg0Dbmbnt+v5bNVKJkY3sGrbEVZuy2HaoCRgAQWHd/Pmm4v5
      +Y2Tz6ijIX0kH7z1EjJg/Qf/BQT++dQL9IpUI7cWcPujS3ECi199iYQB4xh5RRoAY0YO4LNV
      K7n7hvEnhHmaaHAEiY6L7fCZTruNunolcgIsW7KYm2+cTd+U6DbTqtQqAHxeX5vXl732FLvW
      LObowb2EpYzg4V/ewXdr32NviZvf/+ca5AoZ06deyR/+uxLX/x5l8eKl3PWbp3ng53cBUJ27
      l48PtMh+9aX/MmDcdK5IiwViGTkglVUr17BotAlEEVGmYOL0q9Aeq7F6pSagznEzderUkD52
      j4Kly5cRqZXjqtjfSte//Osp9u7ZQ35+HbHRZo4cOQjMA6DnqBn89eH7AVi3bAkHDuwFru4w
      H8+XLjOA9OHTmHJFOO+8vxzn7vdZsOhOdPKTEtjrKHf42fnNWsoOfwfAoIkziQzTgPV0eTFx
      ccc+yYiKjKTC46G8sgpQk5meFEqXnJzCuqKWdrVM1nE1OmDAFac0Y0xERba8vQ1GEzjdeICq
      skosFQ6ee+5Ym1cWQf+eaa2FaSJJitFwcN9+YG67z5x/5y/4yZyJBDw2hvfN4OmX3+bNJx5u
      M+2BAwdB0NHvirQ2r/cdPJo500aT9H9/ZuLEcagVAlsrK0Dws/il50Pppo8Zgd9VT0WDl8we
      6aHzYaZwoA6AssoqKhwnvqMsIp2eafFMuuFmni2u5ek//ZK//NHAK4vf59pJQ9vUJ6lHPyK1
      8tPO22sKmTplGpG9xjB2RH9UaiWBYDB0PSoqMvTZqDfgdLvbzrxOoMsMAOTcddciHnr+edzV
      5Xzx5HLgxJcmLJ6MCBWTr7+NJx66s9Wdm1e2fnsAFBcWwuBEfM56duzLYfq9i8jsmYmAh63b
      95I2cyiIAfbu2UOfvjMAMJnM1FRWAeC2FFPV2FrmmQzkOKk90tDZ3Hy0fAVKob171CxcOI9H
      X/4fH11/NQtmjm45LQaxOZyYTst5kWAQgoHgqRcAKM/dz2NPvMDMW+6md7SmzTT9R07grkW3
      tNY1LR388Pf/LqZ/YthJVzwkRanYvWcfzJsCYoA9+/cBLS+PHmkp2NxpLF/xJqd+xXse+gs/
      +80feeD2OTz2j6e5dtJSgFaFGNrPz2+/XE6+L5Ydny5BEAPsXvNOm+m6gi40ALjm5kX89pH/
      R8aEmxmcEg6cVAIFPX/4wwPc88hDVOXsJjnKwPacKjauaDtzXvx/f2DvxmHk7NlMvTyOX/zk
      ZmLjjDx052weWHQ9m+fOoa7oENvz3Xzx6oMAXDVzJn997UmwFlFRWoyi/aZ5h/z0lw/y9uSr
      mTxjDlPHDaYk9zC3/PpJZo3JbJXul4/8m/1H8/jJ3Kk8NXAo8VFhlBbk8LM/v8Svru8HwLK3
      X+bg18vY9d0masQofvXzO0L3b/n8I+YW7sHttLFzx/eMn3MHbz33t3PSddSMeUwd9DzXTpnI
      TTdei6eplsie4/jzbxZx3y9+yq//+S9c1Tn4rZWU1/vhWJ788sHfM/nqm5gxx8G4wb3IPbyX
      Xz/5HjVb32Hd3nISIg1s3nOE0fN+C0B6Rhp1OR/y0/vu575f/bFDndIzeuKrPMJPf/EbAo2l
      FFi89D2nb9V5yB955JG/XuyHpPfqx8A+PZCrTWQkx3L1DfNJSzjezlUwauIEUuOjGDByEjMn
      DcNhs6MPj+Ynd95JYmxLpzAsKp4JE8aiFkChDePRx/6K6Kwnrd8o/vPsM6THhQMyJl89l3GD
      e2F3uug3fCLPPfsfeiW1yBg1aTqZSTHIVTp+839/IiXKwLBRE0hPammn9xsygj49UkN6R8Qk
      MnHiaJSnHEdGJbFwwTyUeAmICsZPv5YZE4ehOOVVKVdquH7B7cyYNAaT0UBichpzb7mLebOn
      oFIIIKhJTIhFrzcwdsrVPPvcM/RMPNEJTk3vQUJCAgOHjubRfzzBg/fchkZ5epPiOCd/l+PI
      5Grm3byQxBgTTpeHnv2GsGDedRh0aoaOm8boAT3wBWTMXXQf10wYQmJ6T0YM6UdUUiYL5s0B
      bzOiQsP0axcwcVhvIqOisdTX4g3Agp88wIN3L0CQQc+Bw+mZHIug1DBm3HhMehWpPfowYki/
      kC6C2sCEiRO4YuBQpoweiMPh4obb72PCoB707DeEfr1ammN9Bg4LfW7ruDORSSvCJLozPwhX
      CAmJi4VkABLdGskAJLo1kgFIdGskA5Do1kgGcJlzcPtG/vfu8kutxo8WyQDOgtLsvdyxYA7x
      MZEYTWGMnjSDFeu+65Jnb1q7jP+8tJi2vX8kLhRpHuAMVBfuZ9z4qcRcMY4/PvRrzHo5ny15
      nVeWrOX15WtZOGv0pVZR4gKQaoAz8Pzjf8Ft7MGaVSu47qppjJ94JU+/+h43T+3Hnx/7O/VF
      +5k1axbf7i86dkeQB38yj2ffanHv3bPlSxYtvInrrp/Hmx9/0bLiy1PH3FmzWLbyC+69cyF/
      /NOfmDXrKrKrnACIPju3zpnF0s+/45M3n2Xhfb8P6XNwx0Z+ctvNXDtnLq+89yki8OqTf+IX
      f3qyJYHo4Wfzr+GFd1pW2eXs/IqrblhEc6Br8uuHhmQAHRLk2y1bmXHdjUTqlCedl3PdnNlU
      H9mBI/IK3OVH+OjTNQBYCnfz1kdfcsWgoRzZtoZZNyxi+LQbuPv26/nnr25j6fo9EPSybcsW
      /vLoo+jjMhg9dgx5+7ax8ouNABz5bh2fbdrLkGGDqSjKY+eeg0D76xASosJZ8s57OANQm7WT
      5eu38tEnqwHYtOFz7KKyteetRAjJADrEi8PuJswYcdoVgzEM8OByC9x00/V8+cUXBIDPV68i
      qu8Epg5L442XXyRz+GQGZSYSFp3CqKG9WblyVUjGtJvu5pkn/smc2dcy/5rJfPHF5wCsWrWS
      4dNuoG+cvtUzT16HYDTHh9YhXDlzJjJrId8freLrrzdy/bx5HN35HTY/7Ni+g5kzZ17MTPpB
      06XeoD88NKSkxHHoyIHTruRkHUERnkFKlIIb5y/gD/++hj1FFlavWsXNtz6MAqgsr6S2pvLE
      ugFtPP16JIdkDBpwwlFs/oL5vLjwUaodzaxevZ47nzh9cXp76xAMiQMYc0UMW7/7jvJvvmHu
      716lcNsUdu47zHffZ3HPs1M6NVd+TEgGcAZuXXgrP3vkRT5Ydzu3HPPpL8vZw/Ovf8QNC3+H
      XgB937FcOSiOFW8/z8bdVTz23vUApGWkka/Ss2zFB8hPdhQ9th74ZHf5oVPmkGn4Da88/STZ
      zgjmX3PS6rJjdLQOYfq0qaz/ejXFBy08NaIvuyaP48P/PYszZigjekaeJkuiBakJdAZu/uWf
      uHfeJH42dzrjJk/jqpnTGDL6SmIHTufZv/32WCqB+TfN5+1XXqb3lXPol2AE4OcPPETNvrVM
      vWouj/3lMW6bP4dNByvafI5MaeSmuVfxyiuvMGverZg1p/80P/3lg7jytzB5xhwe+8tjLLpl
      Ll9uzwdgxsyZ7PxqNSkjpmBSwMSJk/jkk0+YMmO69JbrgC5ZD/BDRiYomHn9Aq6dPh6tRkNS
      ei9++dtH+PufHkCnOtGzTE9PA5WeRYvuJD0pBoCIuDRuuWkuQsCFKFMx+aq5XDl6QEttIKgZ
      O2Ei8VHhIRlp6RlojWbuvHMR8VEnVm8lpvdi9LCBmDpYhxAdn4gMBTfdcgsZSbHEx8chqA0s
      uHkBSbHmrsmsHyDSPIBEt0ZqAkl0ayQDkOjWSAYg0a2RDECiWyMZgES3RjIAiW5N6zkSVwWL
      l+8hPSOGKJMRS30ZKRl9EVR6wuVN7C10YjaqsTis9O+ZSXVVDXHRZqyuACkxJpZ8vIxRE6cj
      NFuJjE3GYm+AoECUOYLwiPB2VJCQuHScNknYp98gPLV7OJxTTTCxP5G2Ro4WHmDejGH4bNXs
      2nsAMdyN3FlPoVXAVFRPbJiKjNTR9ImFsqpydLoYtr35LsaRg4jWKlEIgmQAEpclrSfCAh52
      7T5I/yGDKMo5ijkmHqfDgUJrIDU+itLiYpqa3MRnJCPzeqiqqCYxNRU5YAo3YWusIqiJoqYw
      i+i4VIIqGUpExIAoGYDEZYk0EyzRrWndBHI72VjjJVoZxOcLEB1hgKCITgC/oEAV8BBQqmhw
      eCm3NTMgNgy3z49Zp8ITBJvLS4xRgwwZjQ4XYVoVAZlA0OejqMlFlFaFze0m1mRAJsjRK2XI
      kGH3ePH4g6RE6ClttBOh09Dg8hGtVyFDRsDvx4MMrUIABCqb7Kjx0+BTEWtUUtrgIDVcg0Gj
      pskbQPT7aXR5yIgyUdLgxKBVEq1V4gyA3+ej3uXFpFZhVApUWpwYwg0EXR6MBjUKQY7d6Sbe
      bEQlg1KrE4NSQCaXo5ILuHxBXH4/DTYnESYDKjGAQael0d5MTLgRlRigwu4m0qDB0ezB4XLh
      U+nQyETCVQJ2XwCDRkOERkGdzYlCocDpDxKhUQAi9TY3YsCPX61BJxdIMGqostrRarTYml2E
      a5UEBQUOix27RkWqRkGTX8SkkkMwSKM3SLJJe0kK0w+R1jWA28m+BjcFzgCDTUos/gBGQUBU
      gjcgRycHOWDzBfAHg2gVAh6PH5lKSYQgolEJ7LP4SVP7KHHKUMoFRiZFUNRgx+txYXf7CepM
      ZBoESppcJGiVNIpyvE1WMjJSEGyN2GRK9lY5GRmtoSEYRC9TIMih3ukkQqXB5vITbVAQVCgo
      snpQECTeoEYMeKhyQrJRoMgeRKtS0MOgxO31g1LGwQYPfc0q/H45ZdV1GKPMRGvlOJrcyPVK
      dKKAWynD4XRiUmpw+2VEKAPoIiNpaLQiC7gRZWoKG92kRumQyVreHv6gSG2DlR5x4dhQEy4L
      4BJFahtsxESGofQ2U+IS0KkVaBQgBEWUMjDotdhdHkRRRATkyAiIHhCVWKwuouIjUIkBVHIF
      9Y5mZB4ntaIGtVxgcIyBygYHPoUclwwMADIINDsRw6IZHNl2+HSJ02llALZmNzVODx5/kKAo
      UmxxEGvUIYgB1GoVBEVkgEElUOHwEatXUWN3E6VTIgoC9U4PqSYNHuQ02ByY9FoUgMvrRVAo
      cLg8GLVq3D4/giBgUCkIiiCXiVhcPsI0CvaX1JIeH40/ECBWq0QUZNjcPgS5HJ/PSyAokByh
      o8xiR6tU4gmCSgBfIIBSkBEUFHg9HsJ0aixuPxq/H4tCTopGic0vEvT7MWpV1Dk96ORg0Kix
      eQKYNQrs3pbnaOUtNY1OJVDR1IxGDgqlGqfLhVqpQqsU8AUCBGRyNAKIwQA7imoYmpmCNujF
      4glQ3+wlwaBEoVTi9QVweAPEGk7EY9epFNTamtGpFDT5gmhkQQSFArUgEAwEaXB50WpUxOhU
      7C6tpXdcJBZ7M+EGLSa1Ao/XTwDwBwO4AiALBFAr5ZgNeuIM5xn3vRsi9QEkujXSRJhEt0Yy
      AIlujWQAEt0ayQAkujWSAUh0ayQDkOjWdGgAAZeFJctWcy7jpFXF2RzOLwdg19ZNOPxnd9/y
      t9/G0cb58vzDLF68mBUr1+Lxt61Je/dCyxi9xdp04kTQxdvvfHh2Sh1j69rl5FW39wQ4vHsr
      pXV2fPY6Vq3fDMCWjRvwtL3lL3gbeXvpynPSQeLi0KEB7N68ng1frOJwmYW6qjKanB6cTQ3U
      NDRRV1VGcVkZxaWt49xUn2QAu7d+i9MPLruFAwcO0uzx01hbgdXuprG2Aluzl+LiIoqLiykv
      LqaupgKL3YXH2URlbcsewuX5hzElXYHWVcpnG3fhsls4dDSHoAg+t5NDh7MoKSomAFjqqsgp
      KAGgrqqM7Pxicnet5+mX36O+vp7iklLKq5uYPGkswYCPrMMHqWlowm23Ul5ZyeEjLXJtljoO
      Hs7meDzZ+upyampryc4vxmW3UFHTAKKP4uKW7xl0NrBp+z4O797CO0uW4xX9rNu0FbUgUpSX
      RU1DiwHWVJRQVFYFQR8lpZXYGmtD31Pi0tBhXKClH67gV/fdypqNe0nV2Vm3r5KyPevxqwy8
      8e5yIpROPtl4gKnjR4TuqS7O5tPPvyI36zD7D2Rx5YzJPPH4U6QkxfL6+8tR2UuoFxIo2b0G
      uzadN5/5M2kDRlOefZjU9EjWfJuFvWAHblMPkqKMlOcfJrfKjq26mOTefVny9rvEmWDjvnI2
      ffYuhug4vvtmO6PH9uOVN1dAYyGljU5eW/wRffv0ROmzcqCwgQGJWp54dRnjxwzi7cVL6Z0e
      x4HDWbz27scMTTHw4odf4as5SqlHz/sv/4eMHn2JTUlEAWTv30FBnZuiXetwqs188skaMiOC
      fH20niF904mMCuOT1d/gsDQwuHcsTneQBq8Wf/keDtYE2bRqGVGRWpav3UHl0e0oo5I5vP8Q
      e3ftYtSESejUUuiqS0W7NYCzJo/SOgdffrObgkPfkzpkIhVZ31PYGCBaZiVj4Egmjx/dpoCJ
      M2/gwQcfZHj/DNzWKjQxmUycPAXcTQiCQDAYwOv1AhAWm8boQX0ASOw3GlvZEQ6X2RjRJz4k
      L+D3M3nOHUzsGUZheQ2FVTbSEszUOXxMu3IyqQkR1FUUU1NXj03UEhWTyMJrxrLqs8+JTkwk
      Jj4Fs0lD3/5DSE1sCVr1/bdfgTEOpazlPd934FBGDx9EY2MTdy5ayLovV2GxeUM6DBszgVHD
      BtDohGS9jxUbdnH19JbwhQpDPGp/HRafnCljhvHeu+8ybPhw8vLyqCkvISE1lfzsHOrra1GY
      YlDJfNSW5SMaY4k0Sn47l5J2DSA7O5fb7r6fe+65hxunDia/splhveMYMOpKMgaOxld+kOVr
      WsJ5f7PmIwprWtrIhvAoYswmABJSUglL6MOg2AAv/ve/TL9uAUNGT2LXxk+osPox6ZSkpbXs
      zJ6UloYcOYPTw4lIH8zxmGsmcwzDhg+nb880lOZ0rp8yBF9AJD4+jmuuHMmLr7yOMiKezIFj
      GNIjFlGEKL2co8XVpPbIICw6BW9dDsX1HpLiogCBtNQU0nr0pLIol6SUdNSGcOKiwtGZzMRF
      GTh44Chxiano1C1aRMUlsXfTGjYdqGDG+KHMuHIklS4tsYYTIdPHD72CngNHEtdrMLFhZob2
      S2X2jQtR+J0oTdHMuuoakswaQEZcQjJjps5mct8Ivtuf38k/qcS5cH6+QH4nm7bsobpgH77Y
      Idx+7cROUaapvppX//caix74A7FGVafI7Gz8LjvvvvUa/abcxKi+yWe+QeKy5vwMQAySl52F
      qDbSMyMF2ZnvOCtsjbU4A0rio0+Px3+54HfbKamx0SM18VKrItEJSN6gEt2aTpsIa2yUhvMk
      fnic8/hbQ0MDCoWC5uZmzGYzdrudqKgoGhsbiYi4fJsuEhLHkZ20M8k5G4DFYkEQBARBYPv2
      7SQmJhIVFXWaYAmJHwLn3AQym83IZDLsdjuJiVJHsLvh8rtw+V2XWo1O45xrALPZjNnc+TuO
      7Krexoi4sZ0u91xxeO0U2wrpHzXoUqtyQeyr2UWiMZkYXVynyt1c9hUF1lxu73cPRpWpU2Vf
      Ci4Lb9BGdz2fF3xCniXrUqvC+uLVbKvYdFnocr5Y3I3sqdnBF4WfsbFkLb6gr9NklztKmd3j
      RpZmvYXDa+80uZeKy8IA8izZTE+bzebyjZdUjwJrDiIii/rfy6ayr2hw1REUgxytP8hneR/y
      7pHXePPQizR5rJdUzzOxpXwjU1Ov4o5+9xCuMfN5wYpOkdvgqsOkCiPFlM6stOtYnrukU+Re
      Si4LL6wCay7X9phHk8dCniWLnhF9u+S5Tp+DkqZCMsJ7IRfkfFO6nlv63oVarmZuz1tYlvM+
      ckFOqimD8UlTMKnCKbMXsblsA9dmzusSHU/FG/ByqH4f+2t3AXDbFXejlp8Ig2L32mhw1ZEe
      lgnAsNhRZDccpsFVR6Q2+oKenW/Nobf5CgBSwzIIrw2nwl5KojHltLQ2TxMH6/aS3XgYX9DH
      Twb8spWex9lctpFmv4PxiVMwqIwXpN/50GU1QFBs2zneH/TT7HNiVJmYkDT1gmqBA7V7qHK0
      vQ3pqeQ0HuH9o29Q56rho+x3eP3A8wyOGYFeaQAgUhvNLX3vYlG/e5mRNpsobQwquYoe4b2p
      c9Vg99rOW8/zJSgGWXL0DbwBD7f0uYsrk2eyNOvNVk2cHZVbGJs4qdV9E5Om8m3ZVxf8/JzG
      o/SMuCJ0PCx2NAfq9rRK4w142Vy2gWW57xGmDuO2K+5mTMJEtpZ/fZq8uuYaiprySQ/LZHnu
      EtYWftblzaouqwEa3fV8U7qO+b1vb3W+zF5MqikDAKPKRLw+kQJrLj3Ce53zM3ZUbSFaG8Pc
      Xgs7TPdV8ec4vDYW9bsXjULDpGRw+91oFK09M8PUbQf0nZA0ha3lX3NVxvVn1KnZ56TGWYXD
      Z0OQyel3AZ3rA7V7SA/PZExCi+9VRnhPmv1OluW8x4CowYiiSImtkOlp17S6L9mUxqayr2h0
      N2DWnN+m2W6/G1/Qi1ZxIuxisimNNYWf4A/6UQgKnD4HH2QtZnDMCO7q/wsEWcv7dXDMcN48
      +CJWj4Vw9Ym5orVFK7kqYw4xujh6m/uRb8nmg+zFJBtTu6xG6LIaIEobQ4wujk2l61udz208
      Ss+IPqHjMQmT2FG55ZzlV9hLidMn0OhuwO13t5uu0JpHk8fCDb1uaVXgTy38HdEzoi9VzooO
      31aH6w/w3pHXWZ67hCJbPi6/my3lX3eoW0d4Ah6+r/6OsQmTW53vHzWYsQmTcPnduAMe5mTe
      1Ob9k5Ons/kCaoECay59zP1PO98vciD5lmwA1hWt4sqUGQyPGx0q/MeZnnYNG0u+CB1nNRwi
      +liZOE5mRB/uHvhrUozpLM9dwqr8ZTS46s5b57OhSzvBk5KnU9tc3WqEpcxeQrIpLXQcoWkZ
      YrW4T7hWOH0OvIETvvltcah+H/2jBjM4ZkSofXwqbr+b9cVruDrjhgv4Fi1MTJrK5vINbV6r
      clSwr+Z75vW+jTv63cOUlFmMjB9LqimdelfNWT8jKAbxBDxAS8d2TMIEVPLTvc9+y7sAAB6g
      SURBVGTTwnowMn4sI+PHEq2LbVNWsimNRnfDGfOxPbIaDtKrjb7ZgOih7K7ZQW7jURSCgh7h
      vdu8P8WUjiiKfJj9Dp/kLuXbsg1MTpnZZtorogZyZ/97GRY7muW5S6h0lJ+XzmdDl48Czem5
      gG0Vm1lb+BlF1nz0Sj1ymbxVmlHx49hZ1VIL+IN+lma9xZKjbxAQA22JJCgGKWoqIC2sB/2j
      BnOk4UCb6dYXr2Zy8nR0Sv0Ff4/MiD5YPRbKbMWn6fJl0Uqu6XFDq+YCQJQulgZX/Vk/40Dd
      Ht4/8jpvHnqRKkcFA6OHXZDO6WGZlNtL2rxW6Sgnq+FQm9f8QT+N7oY2jStCYyYoBvm6dB0z
      0q7r8Plzey3kmowbuDJlFov633ta/pxKojGZhX1/wueFn1DXfPYvjnPhnA1AFEUcDgdVVVV4
      PB7q68/+BwVQy9Us6v9z+kcNZlvltwyJGXlamsyIPpTYivAFfXxTuo6hsaMYED2ULwo+bVNm
      hb2UJEMKcpkcjUJDlCaaCntpqzS5jUfxB330iTy9Gj9frsmYy5fFq1oZ5r7aXaSHZ2LWRJ2W
      PlobQ21z9VnLb/Y5ufWKn3FX/19we7+7L1jfREMyRU2nL8AJikHWFn7GjsotbRpIniW7wz7Z
      5OTpXJNxwxmbkYJMwKgyEaExn7HwH8eoMjGv120sz11yUQYeztkAysrKyMrKwuPxsH37diwW
      S+iaKIpn/ZdkTGVh35/Q29yvzesDo4byRcEn1DZXMzRmJMNiRyGTCWwt/xqn19Eq7cG6lubP
      8eNhcWPYWvFN6NjpdfBN2XquSr/+nHQ8059JFcbQmJFsKl2PzdNEviWH3dXbGZcwuc30kZoo
      Glx1Zy3f5XOiElr2SOgMfZONaVQ6yk87f7BuL+lhmczrfRurC5Zj81hbXT9cv5+B0cM6lJtk
      TO3UvD35L1wdwdXp17O2cGWnyLsgAxAEAa1W26YvkEwm67S/wbEjqHJWMifzptC5qzLmADJW
      FyzjzUMv8tbhl1ie+z7ljhLSwzND6ZKMKSQYkvko+218QR9fFH3KjLTZaJW6TtVRJpMxLG40
      Dq+NtUWfUWYvZl6vW1HKVW2mNarDcPjsZy3bF/QhCEKn6apV6vAFvYiIoXN+0c/3Vd8xLulK
      jCoTczIXsCJ3KUGCyGQyvEEvDq+NaF1Mp+fdufylhmWgFBQUNuWGzuVajuIOuM9Z1smc8zBo
      UlISSUlJ53rbOaNVaLl38IOtzsllcsYnXRk6DogBnF5Hm16oE5KmkN1wmFcPPEtmeO/QxNDF
      YE7PBWedViaTERSDp42StIX7IjidRWtjqXFWEW9oeXltq9jE0NhRoUmqBEMS/aOHsLHkC2ak
      Xcuhun30NvfrdD3Oh5np1/He0ddJNKSyvng1noCbHZVbua3fz07rR54tZ/wVvv32WzZsaHu0
      41Ijl8kxqcPadcrqE9mfO/vfx/S02V2sWfuEqyPO2pXCFeh8A0gypVJqLwJaRsVyLVkMiR3R
      Ks2IuDHUNddSaisiq+EQ/aMGd7oe54NOqWdY7Ghe3PdvUkzpzO99O/2iBvF5wSfnLfOMBhAR
      EdElb/yLhVFlQiFcFh4fAERr46g7y47w8SHQziTVlBHq6O6o3Mzo+PFtvj2vy5zP54WfIsgE
      TOqwTtfjfBkeN5pfDvk9g2OGh44VgoJ1RavOaYDhOGcsGc3NzWi10qZrnUWUNpp6Vx1nM88d
      bGfY90IwayJDk4X51hwmJE9tM51RZWJm2rVtNi8vNaeOIM1Kn0NO4xG+K/8Gl7+ZBX3vPOsm
      0RkNwOFou40tcX5E6WLIt+ZcUh0MSgPri1czKn5chwUlI7xnF2p1/ggygb6RA+gbOeDc7+3o
      osPhwGw2txrqlLgwzJoo6l21Z5X21CG7ziItLJMSWyFX/MAX/XQGHdYAer0ep9NJjx49ukqf
      Hz0KQdGuZ+ypXKyat3/UYFKMaec9cvJjokMDcLlceDweHI72Q4NLnDtquaZN79OTCYgBhItU
      QI0q049iOWNn0GETSKfTERsbGwpkK9E5ROtizjgS5PG721xAItG5nHEYtKKigvj4+DMlkzgH
      IrUxNLobOkzjCXjQyKXI0RebM44CCYJAdXU1KSkty97q6+ux2+04HA40Gg2iKNKr17kvXunO
      RKgjqDzDyjVPwI1aMoCLTocGUFtbi1KpPK0zZrVaMZvNFBUVtZoku1ijFj82tAo9Dp+9w/xy
      +ZrRKLRSnl4ETi7PHRpATEwMjY2NBAInJmSCwSB9+vTBarUyevRonE5nm4Il2kevNODyOzvM
      L2/Qg1qukfL0InPGJlBOTg79+p1whoqJadlh5fjssEYjVdPnikFlxH6Gxd8evxv1OSzTlDg/
      OuwEl5WVIQgCSqWyo2QS54hCUBAQO94+0x1wo5FGgS46HRqAzWbDZDK1agJJdA1uvwvNWa6a
      kjh/OmwC9evXD5fLJTnDXQI8AY80CtQFnLEPUFpaSllZGRkZGWRkZHSFTmeFXP7DmsYXRZFg
      8IQLxJlmg13+ZrQKXVep123p0ACqqqqoqakhNTX1sir8bS1t+6GhV+hp9jvbNQBpHqBr6LAP
      EB8fj8kk+YxcDHRKPc2+9n2s3NIoUJdwRlcIvV5PaWnpmZJdcg4cOMChQy1xbYLBIBUVLTOt
      LpeL/PzTQ4FUV1eTlZVFXl4excXF7Nu3j+rqavbs2YMoijQ1NbX5nJPPu91uPJ7zW7WlVehw
      +Zvbvd4yDyCNAl1sztgHKC8vv+w7wU1NTcjlcvx+P99++y3x8fEcPXqUo0ePolQqsVgsHDp0
      iPLycuLi4pg8eTKRkZEUFhaiUCgQRZHo6Gg8Hg81NTWIosiRI0coLS3luuuuY/v27dhsNjQa
      DUajkcLCQmJjY9HpdFRWVqLVaomMjKSiooKbbrqJzZs3o1AoGDu2/Q0/9CojDm/7NYA0A9w1
      nNEATi38jY2NqNVqbDZbq03yLiVGoxGLxYJSqcRsNqPT6YiLi8Pn8xEeHo7b7cZsNpOcnIxK
      pSI6Oppdu3ZhNBpxu91otVqysrLo27cvJpOJYDCIyWSid+/eWK1WYmNjSU5Oxuv1tsQ0OhYZ
      o6ysjPj4eGJiYnA4HKGOuUwmO2PT0aA0UNfc/sKYH3of54fCGTvBwWCQ8PATUZI1Gg05OTlE
      RESctknepXprCYLAhAkTWp072UdpwIDTl8qNGNE6EsLxNMc7+/37n4ggl5CQ0OZzT3YCtFqt
      GI0t0YxP1QU4LSiTVtHSB2g3z0SpFrhYnLUvUHx8PE1NTfTpcyJ6c3FxMfHx8dTV1bUZGKsr
      OPk5ZWVlJCcnn9P9drudYDBIWFjb0Q5EUSQ3N5fevdsO9NoW4eHh2O32kHyDwdBKz1NHrvRK
      A05f2+utg2IQZFIt0BWc0RvU7/dTVFREeno6AFdc0bJBQlxc526+dr6UlZXh8XhoamrC6XQi
      CC39er/fT58+faioqKC5uZmwsDDs9hYPzMrKSlJTU9FoNKFVbwaDgYEDB7Jz5060Wi1NTU1o
      tVqam5tpamoiEAhgs9nQ6/UkJiZSVVWF0WiktraWSZMmsXPnTtxuN4WFhdhsNvr3709VVVW7
      /QCtQttu3B9f0IdKkDrAXUGHo0AxMTH0798ftfry/jH27NlDaWkpJpMJh8NBXV0dOTk5KBQK
      mpqacLlcof8ymYyUlBSampqw2Wy4XC6USiUejwefzxdKExkZicFg4NChQ2RlZeFyuUhMTMTp
      dHLw4EEcDgdOp5OwsDB8Ph9OpxOr1cqePXvQ6XQUFhZy5MiRdnXWKfXtjgJ5zrBcUqLzOGMn
      +Pvvv8fpdNLc3Exm5sULL3i+nPqGzc/PR6FQkJaWBpww4rNl+vTprY7nz5/f6rit/gTAzJmn
      x7qfOrXtmDtnQpoE6zrOaAANDQ0kJiaG3KAvd0410nMp/F1Ne51ct98lzQF0EWecCEtPT8fh
      cEgzwhcBQSa0uemHJ+CWPEG7iA5rgIaGBqxW62XnDi2K4kXTyeVyEQwG0Wg0nepw19bbXqPQ
      hnbIPBlPwINKqgG6hA4NwO/3t4TzDp5dIKeu5GKNkR9f6O/xePD7/QiCgEajCY0udSYGpRG3
      33WaAbgDbrRyqQboCjo0gNjYWGJj29507ceMTCYLLfUMBoO43W5EsWVTCa1W22nj8waVEYfP
      TjSt89jtdxHZxhZLEp3P5RM3/DJFEAR0uha//GAwSHNzy9ClXC5HrVZfkDFoFTpcvtOHQj0B
      yRO0q5AM4BwQBAG9vmWHSb/f38oYzic4gP5YeJRT8QY8qITTt0OV6HzO2QAaGxsRBIHa2tqQ
      o9nxoFndCYVCgULRkn1+vz8UHkapVKJSnV3h1Sn1WDyNp51vWSkmrQbrCs7ZAHQ6Hfn5+ZjN
      Zo4cOdLKD6e7Om/J5fJQM8nr9YaCCatUqg4jamgVepw+52n55vI3o5Frum1+XmzO2hmuLRQK
      BUlJSdTW1tK/f/9WC0Ik5y1Qq9Uh1xGv1xtqJqnV6lCNcZz2AmR5A15UigvrX0icHedlAOHh
      4a1cpCXaRqVSoVKpQsOqbrc7NMIkl8vRqwxtBsjyiz6UghSLqSuQOsFdwMnDqseNweVyIQgC
      4rHNMjwBD+X2Epo8Vjx+96VUt1shGUAXc+ocgwIlK3KX0OSxkhbWg3C1mbm9Fl5iLbsPkgFc
      QgRBYHDccKJ1scTp2151JnFxkQzgEjMgesilVqFb0/kOLhISPyAkA5Do1kgGINGtuSADqK6u
      Jjc3t7N0kZDoci7IAOx2+0Xxk5eQ6CouaBQoJSVF2kRb4geNzOl0dorHlcvlCgWklZC4nDk5
      cEKnGYCExA8RqQEv0a2RP/LII3+9FA+2WCxUVlbS3NyM3+9HoVCwbds2IiMjsVgsuFwuNBoN
      5eXl2O12ysvLiY6OblOWy+WivLyc+vp63G43JpOJw4cPYzQacblcOBwOmpubkcvlOJ1OysrK
      cLlceL3ekB//qWRlZREREUF2dnYomrTBYEAURdxuN3V1dRiNRqqqqrBarZSVlREdHd2uC7Pd
      bic3N5fw8HDy8/Oprq5GLpdjsVioqKjAZDKRlZWFUqkMLTbqCJfLRXFxMXq9nj179tDc3IzH
      40GpVIb2MMjLy0Mmk9HQ0NBuHFRo2ecgOzsbp9OJzWYjPDyc3Nzc0Fro5uZmVCoVR48exWg0
      kpeX1+5vAS1BlRsbGykrKyMmJobt27djNpvZvXs3MpkMQRDweDw4HA5qamqoqanBZDK1GYXD
      4/GQlZWF2+3GYrGg1WrZu3cvVVVVITmCIOD3+2lsbKShoYHy8nIiIyPPaoDmktUAwWAQnU5H
      SUkJNpuNgoICfD4fubm5WK1WGhoakMvloVDlXq+3XVlarZZAIIBKpcJqtRIMBqmrq6O4uJiy
      sjIaGxvJzc2lqamJYDCI0WhEEARcrrZjc0LLyq6CggLsdjuBQACn00l2djbFxcV8//332Gy2
      UHgWo9GI3+/vMHqGSqWiubkZn89HMBgkJiaG/Px8EhISUCqVIb1kMtlZbbpRUFCAzWYDWoIY
      OxwOSkpKyMrKwmw2h+QBHeYdEEp7PP9EUcTpdFJQUEB5eTkNDQ1AS8SMkpKSUBDgjuSFhYXh
      9Xrxer3Ex8ezd+9ewsPDKS0t5fDhwxgMBoLBIEqlktLS0tC6ifZ083q9rULh+P1+rFYrRUVF
      7N27N7QHmyAIlJWV4XafnUftJesDNDQ04PP5iI6OJhAI4PP50Gg0HDp0iMTERAwGA1qtlpKS
      EvR6fajQtIfL5QrtWeB0OtHpdNTW1mI2m5HJZDgcDgwGA263G5fLhSiKxMbGnrZI5WR5Wq0W
      l8sV2kTD5/Nhs9lQKpUcPHiQK6+8koqKCjQaDT6fj/j4+Hb1CwQC1NXVERcXFwq4azabaW5u
      Dr0Mampq0Ov1aLVaDAbDGfPQ5XKhVqspKSkhOTmZmpoawsPD8fl8KBQKGhsbQ5t6dLTJidPp
      pL6+Hr1ej16vD9XIDQ0NofxTKBSUl5eTmJhIIBDoUF5FRQVarRaPx0N8fHyoMAaDQSwWC0aj
      EZPJRF1dHaIoEhYWhlKpbPON7XK5qKmpCemh1+vxeDwht/JAIEBNTQ39+vWjuroapVKJXq8/
      64AFUidYolsjdYIlujWSAVwijodVaWpqatWmFkWx1eSiKIrU1NRgtVrJycmRFsp3MtJ6gEuE
      IAjs3buX+vp64uLiUKlUREZG4vP5KCwsZPLkyVRUVOBwOEJ7GGRmZrbaf6BPnz7o9foO+x4S
      HSPVAJeI47GVYmJikMlkHD58mEOHDlFXV0dZWRmBQICqqiocDgfh4eH4/X5yc3OxWCzs2LGD
      sLAwdu/eLbmiXCBSJ1iiWyPVABLdGskAJLo1kgFIdGskA5Do1kgGINGtkQxAolsjGYBEt0Yy
      AIlujWQAEt0ayQAkujVtGICbDV9tBaC+PJ/D+eVnJShv/1a27s87/YLfwXuLF/Pue0spr7Wc
      273HsFha76O18oN3aHSf/d7Ffkc9i4/pUNlga3WtOm8/a7fub53e68LmcLFv81r251efUf6p
      +p1K3qFdbN+Xddb6ngtb1y4nr7p9fyC3tYrFixfzzntLOFpQds7y3dZqnv3Pf6iyuvE7G1i/
      +XsAtny1ijq7j7qyPPbnFLd7/9rlb9OBepecNgzAw4YNrQ1ADPrJPnKIqjoLQW8zxeVVBL3N
      lFbUUltRSmlpKdU1NVRXV1NSUQOIFBcXt4jzOzlUZGHGpEE8//xriMEAWUcO0eR0AyIFOUcp
      Kyuj3urA53Zy8NBhvIEgnmYbBw4cpK6uhr/+7W8Ul1dRXFxEcXExw8dNwqASqCwtJKegBIDi
      4iIKc7OwOtwE/R4OHzyA1eE6pkI9RZYA04al8eJbH4WeW2ex43FYqa634mxq5MDBQ7h9QVYv
      fZUPV24ksc9gEowyyqrqQPRRWFTWSkeAZlsjf/vb3ykorcDvcXHo4AEsttbL+1Z8+hmfLF+G
      iEhBQQEAJYWFBMQgeVlHaGhy0mxrpKS0lOp6K+XF+eQVtRTWpoYacgtLQ/lZVpRHRU1DSHZ9
      dTk1tbVk5xfjsltarok+iotbXlyepmrKmmDm1Ikse/0/HCltpLG2kkNHc/B7nBSVVR3Lv+KQ
      TLulngMHD+PxB9m28QsCuhgiDBoUOiPrV32KGPTw8bvvsG3vUXZ+uw63qMFuqeNoTgEitMqj
      6vJiPAGRnOwcLkenszYWxXt4//W3KSovYdfuvUSn92fHmvfwaiJZ/cFbJCQl8P6arYzJNPH6
      Z9ux5Gwhu0FGpMaPR2lk9YpPGJYZwcdfH2XUkL7gd/LZmk3ER2qotsso2b+JoCGKZR+vQO0s
      ZdPROhrLsjAm9mLN0jeJjY/is7XfsXXtMszJGei1BrZv+44Ro8fxyjP/IL7XULas/ID0EaPY
      /c1WPv/kPSJ6jua1Jx8hNjGe95Z9RW32FuoxExtlJsygw++s592PV1FRWc3UWbPJ2fIZBXYl
      6z79mN69Uim3geCq4fDu7/j2SDVhYiMOWTje6sPUB4ws/3g5vWPkrNtfzjcrPwzpOGbEILwu
      Jxu+3sSIUaN57fmniExI4a3XXmf8tOkoBXDU5LK3zE8vYzPy+AGsfvcl+gwfxauvvo2j9BA1
      QQOrln1MXJjI4s+2MmpwD3bt3M/KDxaT0Gcgz/3nBeKjTbz94WoS1DY2Hqxh36ZVpA0eh1Et
      J3v/Dgrq3BTtWodTbeaTT9aQGRHk66P1DOmbjqepmn1FTcyaMg49dnJq/Thr8vluw+fUiOF8
      vvxjRvdP5L3V3zN2+ADclnL+/tT/SIo18P7y9SRFCFQ3yxk5dBBKuZz8vZtRaHXIIpIoLSqn
      oaaaq6cN56nn38REI/vKPaz9aHEojzQBC+UVVdT7tfTvkXRJCnlHtNkHiEvvz4MPPsjCG2YC
      UFRtZea0yQzulUBNg4NAINBqofW4yVMwqOUg1zEwWc/bKzZw1dXTQ9dFMYguMo3f//ou8vIL
      KCnIIzUlnZyCAiZNncWQAX0BNwV5JeTll5KelsJtd97Jzq/X0eRXEG6OIDM1EX1UIhOG9weg
      rjCHQ2W1pCXHY2tyEB6bypRpUxEdFq668Tbqc3ZyKO9E861Hv2GM6ptETUMTefl5VJUVkZya
      jNcHEGTdlxvo2TMTm62JxIRE0jJ7oxJAUIeTbAywbP1Orp4xqpWOAPrwKCIiIuiVHo3VpWHy
      pIkkmMB2bF37N+vX4Xc30eQVWbduA9MnDefdN15nwLhp5OXlU15SQGpqCl4/DBo2ioClkrzK
      RlKToqkqzsOY3JfJkyeiU0BBXh51NeWYE1IJek8snB82ZgKjhg2g0QnJeh8rNuzi6unjW/+o
      YpD9+4+QEa9nw7ZDZGak0WR3M7JnFK8v/ZwZV88CwFJVRkzmQCZPmY67qZrk5GSS03uhPbZl
      2cjhA3njrQ8ZM2U2oqOQoDocX30F5TV1VNlEEsyy0/Jox74jDB/Q+9xKZhfRhgHIychoUVxn
      MhNjNnH7gjm89MIL1MriGTtuFAlCI6u/2U1KQgwxCSnolAKG8Ciiwg3MnHElWZUuesYeW9Qt
      KBk0dBjDhw5GrRBYeNstOB1OohPiuWr2jaz7+HWyyyxEhcewYP5VuLx+4uPjOXTwIGFRcUSY
      dPRPi+PLzbtIS0sDICEllXBzFOpgM6LaRLhBfeyaQEZGGtlHDqHQhREXHXFMBR1pSXFMnXs7
      1Ue2M+vGW8HjQGeOJyYynLgoM6lJsZTWWElLiiOtd38ObP4SISyOcIOaq2ZNIaiLIyk8opWO
      xxnSK4lVXx9gzrRBvPDfF4kfMp04HYBIlV3OQw/cx30PPITaXceAsVNprGlk+oQh3LjwNvxO
      B6boBKLNLXltNMci+OzI9REk9BhIqtLC2x98SgCYMvtGTAo/MqWJuKiW/I2KS2LvpjVsOlDB
      jPFDmXHlSCpdWmINLSVWrjZgq8zmqaefIW30tQy/IoPYMDVWt0hcVDjTZk3jYGEj/VNa8iq+
      z3BiA9X897+vcN2CO0Jl4DgDh4/GEJVM73gDw/v2YsCo8ZjTBzJlSA8Cokh8XEarPIpLSuPh
      hx7gi88+xX8ZtoE6dz2A38XH775FWL8pzBzVt9PEdme2b96Ipb6C7Hotv71nfodp/S477771
      Gv2m3MSovskdpgUg6GX10sUEk0cxZ9LgTtL4h0UnG4CbnJIaevdI7TSR3Z2SghwcPjl9e2ci
      nCHKh99tp6TGRo/UxLMTHvSSU1BBr57pdNcdiaUVYRLdmk6bCGts7HgsXELickQyAIlujeQK
      IdGtOa+4QA6HA6fTSVNTE5mZmdI2Sd2UVbu/otJSc8FyhmcMZHiPgZ2g0blzzgYgiiL79+/H
      6XQyYMAA7HY7YWFhiKIoRS3rZqzcs549hYcuWM7Pp93KsIwBnaDR2XM8cO45G4BMJmPs2LHU
      19djtVqJi4sLnT+baLwSPx5knTR4KuPSlZ3zagIJgkBMTEyH4colJH4ISI13iW6NZAAS3RrJ
      ACS6NZIBSHRrJAOQ6NZIBiDRrZEMQKJbIxmARLdGMgCJbk2HBiCKIllZWdI+VBI/Ws7KAMrL
      WwfHqq2txePxUFVVdVGVk5C42HToCySKIpGRkZSVlREVFUVUVBQAarWaPXv2kJCQgM1mw2Qy
      Sd6g3RCxk0JdiXR92Tkrb1BBENBoNKSkpKBSqULnS0pKSElJwWKxkJSUFBIoeYNePuQ15PDi
      zqc6RdbzV7/R5vkfvTdoMBgkKyuLYDBIenp66PzAgS2LF44XfgmJHypnHAWKiYmRCrrEj5YO
      DUAmk2EymVCr1V2lj4REl3LGGsDlcuF2u7tCFwmJLueMNYDP58PlcnWVPhISXUqHBuD3+1Eq
      lWi12q7SR0KiS+lwFGjbtm3U1NQwZMiQrtKn22DzWrH5rBcsx6QMx6QK7wSNuicdGsCkSZMQ
      RbFbukK8kPXPTpEzN+V2kvSnBws+2nSAHXWbL1j+6OiJjI6edMFyuisdNoGCwSDff/99tzQA
      ie7BGX2BrNYLr6YlJC5XzjgKpFarJR8fiR8tZ6wB5HI5dXV1XaWPhESX0mEnWCaTEQwGSUlJ
      Oe1afX09JSUl9O3bF51Oh8/nw+12IwgCjj2dsyeupmcKgkGLIAgEgy3bkgqCANYGVE77BcsP
      KFX4ouJOkx8MBokUYpHLBQLHtkM938+iT8Tr9Z4mXxXQEKNMIBgItJyXyzv83N51DbrQROXJ
      30MhKkjSpV6Q7sc/tyVfEARSzQktv7lcIHgs/fl8Nmv///jhaQclnn98Z2B9Q/ieZmLATyl5
      uPmsrKwMzMzMDAwMBG6Ief78OcOVK1cYdHR0UC6FY2BgYPj06RPD48ePGVRVVRnY2NgY7ty5
      w6CiosLAwMDAsFPWFZtxJAPTVT0MQpb6mBL7tjAw7N9CuQUKagwMyUWUmzMKaAL+37vJwDCL
      OitaGTuwr2gFAGxDs+yyc3hUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Highest Traffic Area by Day/Night Hours' width='192'>
      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
      wQqyOwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hourly Pedestrians Relative to Average by Day of Week' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGz0lEQVR4nO3cTWtb6RnG8evoLVIUp4Q4L0ZNgoMFsyhpEhIVNASTEpouCl22i36EfoB+
      gtL9fIvuSmFWA8FpqIshJlZJ3NgUUqy8yIlsJKVy7XPk00WZMBCGeTnPcZRe/9/K2tx6FueP
      jo7RHaVpmgowFEVRVPjQhwA+JAKAtdwD6Ha7ev36dd5vA3wvpbzfYH9/X1EU5f02wPfCLRCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs5f6T
      SPj44/Kf9cXf/5J5zq/bv9RPf/RpgBN9MwJAMP/s/UtLT/6Wec6tT34S4DTfTpBboCRJdP/+
      fQ2HQz148EAbGxshxgK5y/wJcHh4qCdPnmh/f19Pnz7V1atXtbq6qmazqSRJNJlMlCSJDg4O
      QpwXU+xwchhkzmQyObLrJXMAg8FAvV5P29vbqlariuNYhUJBURSpXC6rWCyqVCqpUqmEOC+m
      WKEY5plKsVg8suslcwCnTp3SnTt3tLW1pbNnz6rT6ajZbIY4G5C7IF+CoyjSxYsXJUmtVivE
      SOBI8H8AWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMAWCMA
      WCMAWCMAWMscQJqm2t7eVr/fV5Ik6na7GgwGIc4G5C7IJ0AURep0Our3+9ra2lIURSHGArnL
      vBUiiiKNRiOVSiUdO3ZMk8lE6+vrarVaLMYyY7kY6+DgQLu7u5pMJu+WYZVKJRZjGbJcjFUu
      l3Xt2rV3tz03b97kFggfjSC3QF+94Ln48THhMSisEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsBdkL9PbtW43HY6VpquFwqDiOQ5wNyF3m3wRL
      Ur/f1+bmpi5fvqw3b94oSRK12+0Qo4FcBflRfJIkqlQqevHihW7cuKGVlRWlacpeIDOWe4Hi
      OFYcxyoUCpqdnVWn01GtVmMvkCHLvUClUkmNRkOXLl1StVrVaDRSrVYLcTYgd0FugWZmZt69
      PnnyZNaRwJHhMSisEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsBVmM9fjxYz18+FDD4VBLS0vqdrshzgbkLshirGazqdXVVe3u7mowGKhe
      r7MXyJDlXqA0TbW5uakLFy6o0Whobm5Oy8vLWlxcZC+QGcu9QEmSaGdnR3t7e6rX69rY2NDC
      wkKIswG5yxxApVLRrVu33r1utVpZRwJHhqdAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYA
      sEYAsEYAsEYAsEYAsEYAsEYAsEYAsEYAsBZkKwQ+Ds8HW3o1epl5zg9/cEHnZuYCnOjDC7IV
      YjweS5KOHz+u0WikarXKFogp9NdnD/T5P/6Uec6vfvwb/fyTXwQ40YcXJIDnz5+r2+2q0Who
      OBwqjmO12+0Q5wNylTmAKIo0NzennZ0d9ft9Xb9+XSsrKyzGmkKHh5Mgc75ucZXlYqw4jnXv
      3j01m00Vi0Wtra2pVqspiiIWY02ZQqEYZM7XLa6yXIxVKpV0+/ZtSf/7DjAej1WtVjMfDDgK
      mQMoFAqamZl59/qrfwPTjv8DwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoBwBoB
      wBoBwBoBwBoBwBoBwBoBwBoBwFqQAHq9ntbX1zUej7W0tKRutxtiLJC7IKsRq9Wq+v2+Zmdn
      NRwOVa/X2Qs0hdgL9L4gAXy5CeLMmTO6e/eulpeXtbi4yF6gKcNeoPcFW457/vx57e/va21t
      Tc1mM9RYIFdBAigUClpYWJAktVqtECOBI8FTIFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgj
      AFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgjAFgLEsBkMtHe3p7SNNVgMGAFCj4aQX4U/+zZ
      M3W7Xc3Pz6vX6ymOY7Xb7RCjgVwFCWB+fl4vX77Uq1evdOXKFa2srLAYawqxGOt9wfYCSdK5
      c+f06NEj1Wo1RVHEYqwpw2Ks9wUJIIoitVotlctlnT59WtVqNcRYIHfBAviy2BMnToQYCRwJ
      HoPCGgHAWtAvwcjmMD3UXjLOPKdcqKhS5KHDt0EAU+Tf8Uifdf6Qec5i42f6dO52gBP9/+MW
      CNYIANa4BfoO0jTVfyZ7medEilQt1QKcCFkRwHewNxnrs87vM8+pl2b02yu/C3AiZMUtEKwR
      AKwRAKwRAKwRAKwRAKwRAKz9F1wQK2CG+QmzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Most Popular Days by Sensor Location ' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Most Popular Friday Night Spots' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <_.fcp.VizExtensions.true...referenced-extensions>
    <_.fcp.VizExtensions.true...referenced-extension>
      <manifest manifest-version='0.1'>
        <worksheet-extension extension-version='1.5.0' id='com.tableau.extension.sankey'>
          <default-locale>en_US</default-locale>
          <name>Sankey</name>
          <description>Visualisation of flows between nodes (levels) with proportionally sized edges.</description>
          <author email='github@tableau.com' name='tableau' organization='tableau' website='https://www.tableau.com' />
          <min-api-version>1.11</min-api-version>
          <source-location>
            <url>https://extensions.tableauusercontent.com/sandbox/sankey/sankey.html</url>
          </source-location>
          <icon />
          <context-menu>
            <configure-context-menu-item />
          </context-menu>
          <encoding id='level'>
            <display-name resource-id='level-id'>Level</display-name>
            <role-spec>
              <role-type>discrete-dimension</role-type>
              <role-type>discrete-measure</role-type>
            </role-spec>
            <fields max-count='5' />
            <encoding-icon token='level' />
            <tooltip resource-id='level-id'>Level</tooltip>
          </encoding>
          <encoding id='edge'>
            <display-name resource-id='edge-id'>Link</display-name>
            <role-spec>
              <role-type>continuous-dimension</role-type>
              <role-type>continuous-measure</role-type>
            </role-spec>
            <fields max-count='1' />
            <encoding-icon token='edge' />
            <tooltip resource-id='edge-id'>Edge</tooltip>
          </encoding>
        </worksheet-extension>
        <resources>
          <resource id='edge-id'>
            <text locale='de_DE'>Verbindungen</text>
            <text locale='en_GB'>Link</text>
            <text locale='en_US'>Link</text>
            <text locale='es_ES'>Vínculos</text>
            <text locale='fr_CA'>Lien</text>
            <text locale='fr_FR'>Lien</text>
            <text locale='it_IT'>Collegamento</text>
            <text locale='ja_JP'>リンク</text>
            <text locale='ko_KR'>링크</text>
            <text locale='pt_BR'>Elos</text>
            <text locale='sv_SE'>länkar</text>
            <text locale='th_TH'>ลิงก์</text>
            <text locale='zh_CN'>链接</text>
            <text locale='zh_TW'>連結</text>
          </resource>
          <resource id='level-id'>
            <text locale='de_DE'>Ebene</text>
            <text locale='en_GB'>Level</text>
            <text locale='en_US'>Level</text>
            <text locale='es_ES'>nivel</text>
            <text locale='fr_CA'>niveau</text>
            <text locale='fr_FR'>niveau</text>
            <text locale='it_IT'>livello</text>
            <text locale='ja_JP'>レベル</text>
            <text locale='ko_KR'>레벨</text>
            <text locale='pt_BR'>nível</text>
            <text locale='sv_SE'>nivå</text>
            <text locale='th_TH'>ระดับ</text>
            <text locale='zh_CN'>级别</text>
            <text locale='zh_TW'>級別</text>
          </resource>
        </resources>
      </manifest>
      <referenced-views>
        <referenced-view instances='1' viewId='Most Popular Days by Sensor Location ' />
      </referenced-views>
    </_.fcp.VizExtensions.true...referenced-extension>
  </_.fcp.VizExtensions.true...referenced-extensions>
</workbook>
