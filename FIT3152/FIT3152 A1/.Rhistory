mutate(
c19ProSo01 = c19ProSo01 + 4,
c19ProSo02 = c19ProSo02 + 4,
c19ProSo03 = c19ProSo03 + 4,
c19ProSo04 = c19ProSo04 + 4
)
#assign levels to response values
c19ProSo_data[2:5] <- lapply(c19ProSo_data[2:5], factor, levels = 1:7,
labels = c("Strongly Disagree", "Disagree", "Somewhat Disagree", "Neither Agree nor Disagree", "Somewhat Agree", "Agree", "Strongly Agree")
)
#factor focusCountry to get label names
c19ProSo_data$focusCountry <- factor(c19ProSo_data$focusCountry, levels = c(0, 1), labels = c("Other Countries", "Brazil"))
#rename question columns to represent the question text
c19ProSo_data <- c19ProSo_data %>%
rename("I am willing to help others who suffer from coronavirus." = c19ProSo01,
"I am willing to make donations to help others that suffer from coronavirus." = c19ProSo02,
"I am willing to protect vulnerable groups from coronavirus even at my own expense." = c19ProSo03,
"I am willing to make personal sacrifices to prevent the spread of coronavirus." = c19ProSo04,
)
#convert responses to a likert object, and group by focus country
c19ProSo_likert <- likert(c19ProSo_data[, c(2:5)], grouping = c19ProSo_data$focusCountry)
#plot the graph
plot(c19ProSo_likert)
########################################################
#2b
########################################################
#assign dataframe
regression_data <- cvbase
#change na vals to 0 for dummy vars
regression_data[, c(1:10, 39:44)][is.na(regression_data[, c(1:10, 39:44)])] <- 0
#convert scales that include neg vals to positive only
regression_data <- regression_data %>%
mutate(
c19ProSo01 = c19ProSo01 + 4,
c19ProSo02 = c19ProSo02 + 4,
c19ProSo03 = c19ProSo03 + 4,
c19ProSo04 = c19ProSo04 + 4,
c19perBeh01 = c19perBeh01 + 4,
c19perBeh02 = c19perBeh02 + 4,
c19perBeh03 = c19perBeh03 + 4,
c19RCA01 = c19RCA01 + 4,
c19RCA02 = c19RCA02 + 4,
c19RCA03 = c19RCA03 + 4,
bor01 = bor01 + 4,
bor02 = bor02 + 4,
bor03 = bor03 + 4,
MLQ = MLQ + 4
)
#convert rankOrd to be in terms of category, rather than rank
regression_processing <- regression_data %>%
mutate(rowNum = row_number()) %>%
pivot_longer(
cols = starts_with("rankOrdLife"),
names_to = "rank",
values_to = "category"
)
#NA out rankOrd responses where multiple categories have the same rank (idk how this would even occur given the nature of the question)
#look at rowNum == 141 for example
regression_processing <- regression_processing %>%
group_by(rowNum) %>%
mutate(category = if (!any(is.na(category)) && length(unique(category)) < 6) NA else category = category) %>%
ungroup()
#rename column text values to be numerical
regression_processing <- regression_processing %>%
mutate(rank = case_when(
rank == "rankOrdLife_1" ~ 1,
rank == "rankOrdLife_2" ~ 2,
rank == "rankOrdLife_3" ~ 3,
rank == "rankOrdLife_4" ~ 4,
rank == "rankOrdLife_5" ~ 5,
rank == "rankOrdLife_6" ~ 6
))
#pivot back to wide format to return to correct num of rows
regression_processing <- regression_processing %>%
pivot_wider(
id_cols = rowNum,
names_from = category,
values_from = rank,
names_prefix = "rank_"
)
#remove NA ranking column and rowNum column
regression_processing <- regression_processing %>%
select(-c(rowNum, rank_NA))
#when pivoting back to wide format, list columns were created, due to the NA values
#we will have to convert the list columns back into regular columns to make any more changes
regression_processing <- unnest_longer(regression_processing, col = c(rank_C, rank_E, rank_F, rank_D, rank_A, rank_B), keep_empty = TRUE)
#Replace NULL (No Value) with NA(Missing Value)
regression_processing <- replace(regression_processing, is.null(regression_processing), NA)
#Bind table to retrieve all other data
regression_processing <- regression_data %>%
select(-starts_with("Rank")) %>%
bind_cols(regression_processing)
#assign clean and tidy data to regression_data
regression_data <- regression_processing
#Extract data from focus country (Brazil) only
brazil_data <- regression_data[regression_data$focusCountry == 1, ]
#Extract data from other countries only
otherCountry_data <- regression_data[regression_data$focusCountry == 0, ]
##########################
#Focus Country Regressions
##########################
#regression for Brazil proso01
brazil_c19ProSo01 = lm(c19ProSo01 ~
employstatus_1 +
employstatus_2 +
employstatus_3 +
employstatus_4 +
employstatus_5 +
employstatus_6 +
employstatus_7 +
employstatus_8 +
employstatus_9 +
employstatus_10 +
isoFriends_inPerson +
isoOthPpl_inPerson +
isoFriends_online +
isoOthPpl_online +
lone01 +
lone02 +
lone03 +
happy +
lifeSat +
MLQ +
bor01 +
bor02 +
bor03 +
consp01 +
consp02 +
consp03 +
rank_A +
rank_B +
rank_C +
rank_D +
rank_E +
rank_F +
c19perBeh01 +
c19perBeh02 +
c19perBeh03 +
c19RCA01 +
c19RCA02 +
c19RCA03 +
coronaClose_1 +
coronaClose_2 +
coronaClose_3 +
coronaClose_4 +
coronaClose_5 +
coronaClose_6 +
gender +
age +
edu,
data = brazil_data)
#regression for Brazil proso02
brazil_c19ProSo02 = lm(c19ProSo02 ~
employstatus_1 +
employstatus_2 +
employstatus_3 +
employstatus_4 +
employstatus_5 +
employstatus_6 +
employstatus_7 +
employstatus_8 +
employstatus_9 +
employstatus_10 +
isoFriends_inPerson +
isoOthPpl_inPerson +
isoFriends_online +
isoOthPpl_online +
lone01 +
lone02 +
lone03 +
happy +
lifeSat +
MLQ +
bor01 +
bor02 +
bor03 +
consp01 +
consp02 +
consp03 +
rank_A +
rank_B +
rank_C +
rank_D +
rank_E +
rank_F +
c19perBeh01 +
c19perBeh02 +
c19perBeh03 +
c19RCA01 +
c19RCA02 +
c19RCA03 +
coronaClose_1 +
coronaClose_2 +
coronaClose_3 +
coronaClose_4 +
coronaClose_5 +
coronaClose_6 +
gender +
age +
edu,
data = brazil_data)
#regression for Brazil proso03
brazil_c19ProSo03 = lm(c19ProSo03 ~
employstatus_1 +
employstatus_2 +
employstatus_3 +
employstatus_4 +
employstatus_5 +
employstatus_6 +
employstatus_7 +
employstatus_8 +
employstatus_9 +
employstatus_10 +
isoFriends_inPerson +
isoOthPpl_inPerson +
isoFriends_online +
isoOthPpl_online +
lone01 +
lone02 +
lone03 +
happy +
lifeSat +
MLQ +
bor01 +
bor02 +
bor03 +
consp01 +
consp02 +
consp03 +
rank_A +
rank_B +
rank_C +
rank_D +
rank_E +
rank_F +
c19perBeh01 +
c19perBeh02 +
c19perBeh03 +
c19RCA01 +
c19RCA02 +
c19RCA03 +
coronaClose_1 +
coronaClose_2 +
coronaClose_3 +
coronaClose_4 +
coronaClose_5 +
coronaClose_6 +
gender +
age +
edu,
data = brazil_data)
#regression for Brazil proso04
brazil_c19ProSo04 = lm(c19ProSo04 ~
employstatus_1 +
employstatus_2 +
employstatus_3 +
employstatus_4 +
employstatus_5 +
employstatus_6 +
employstatus_7 +
employstatus_8 +
employstatus_9 +
employstatus_10 +
isoFriends_inPerson +
isoOthPpl_inPerson +
isoFriends_online +
isoOthPpl_online +
lone01 +
lone02 +
lone03 +
happy +
lifeSat +
MLQ +
bor01 +
bor02 +
bor03 +
consp01 +
consp02 +
consp03 +
rank_A +
rank_B +
rank_C +
rank_D +
rank_E +
rank_F +
c19perBeh01 +
c19perBeh02 +
c19perBeh03 +
c19RCA01 +
c19RCA02 +
c19RCA03 +
coronaClose_1 +
coronaClose_2 +
coronaClose_3 +
coronaClose_4 +
coronaClose_5 +
coronaClose_6 +
gender +
age +
edu,
data = brazil_data)
#create brazil summaries
brazil_proSo1_summary <- summary(brazil_c19ProSo01)
brazil_proSo2_summary <- summary(brazil_c19ProSo02)
brazil_proSo3_summary <- summary(brazil_c19ProSo03)
brazil_proSo4_summary <- summary(brazil_c19ProSo04)
#create otherCountry regressions
#regression for otherCountry proso01
otherCountry_c19ProSo01 = lm(c19ProSo01 ~
employstatus_1 +
employstatus_2 +
employstatus_3 +
employstatus_4 +
employstatus_5 +
employstatus_6 +
employstatus_7 +
employstatus_8 +
employstatus_9 +
employstatus_10 +
isoFriends_inPerson +
isoOthPpl_inPerson +
isoFriends_online +
isoOthPpl_online +
lone01 +
lone02 +
lone03 +
happy +
lifeSat +
MLQ +
bor01 +
bor02 +
bor03 +
consp01 +
consp02 +
consp03 +
rank_A +
rank_B +
rank_C +
rank_D +
rank_E +
rank_F +
c19perBeh01 +
c19perBeh02 +
c19perBeh03 +
c19RCA01 +
c19RCA02 +
c19RCA03 +
coronaClose_1 +
coronaClose_2 +
coronaClose_3 +
coronaClose_4 +
coronaClose_5 +
coronaClose_6 +
gender +
age +
edu,
data = otherCountry_data)
#regression for otherCountry proso02
otherCountry_c19ProSo02 = lm(c19ProSo02 ~
employstatus_1 +
employstatus_2 +
employstatus_3 +
employstatus_4 +
employstatus_5 +
employstatus_6 +
employstatus_7 +
employstatus_8 +
employstatus_9 +
employstatus_10 +
isoFriends_inPerson +
isoOthPpl_inPerson +
isoFriends_online +
isoOthPpl_online +
lone01 +
lone02 +
lone03 +
happy +
lifeSat +
MLQ +
bor01 +
bor02 +
bor03 +
consp01 +
consp02 +
consp03 +
rank_A +
rank_B +
rank_C +
rank_D +
rank_E +
rank_F +
c19perBeh01 +
c19perBeh02 +
c19perBeh03 +
c19RCA01 +
c19RCA02 +
c19RCA03 +
coronaClose_1 +
coronaClose_2 +
coronaClose_3 +
coronaClose_4 +
coronaClose_5 +
coronaClose_6 +
gender +
age +
edu,
data = otherCountry_data)
#regression for otherCountry proso03
otherCountry_c19ProSo03 = lm(c19ProSo03 ~
employstatus_1 +
employstatus_2 +
employstatus_3 +
employstatus_4 +
employstatus_5 +
employstatus_6 +
employstatus_7 +
employstatus_8 +
employstatus_9 +
employstatus_10 +
isoFriends_inPerson +
isoOthPpl_inPerson +
isoFriends_online +
isoOthPpl_online +
lone01 +
lone02 +
lone03 +
happy +
lifeSat +
MLQ +
bor01 +
bor02 +
bor03 +
consp01 +
consp02 +
consp03 +
rank_A +
rank_B +
rank_C +
rank_D +
rank_E +
rank_F +
c19perBeh01 +
c19perBeh02 +
c19perBeh03 +
c19RCA01 +
c19RCA02 +
c19RCA03 +
coronaClose_1 +
coronaClose_2 +
coronaClose_3 +
coronaClose_4 +
coronaClose_5 +
coronaClose_6 +
gender +
age +
edu,
data = otherCountry_data)
#regression for otherCountry proso04
otherCountry_c19ProSo04 = lm(c19ProSo04 ~
employstatus_1 +
employstatus_2 +
employstatus_3 +
employstatus_4 +
employstatus_5 +
employstatus_6 +
employstatus_7 +
employstatus_8 +
employstatus_9 +
employstatus_10 +
isoFriends_inPerson +
isoOthPpl_inPerson +
isoFriends_online +
isoOthPpl_online +
lone01 +
lone02 +
lone03 +
happy +
lifeSat +
MLQ +
bor01 +
bor02 +
bor03 +
consp01 +
consp02 +
consp03 +
rank_A +
rank_B +
rank_C +
rank_D +
rank_E +
rank_F +
c19perBeh01 +
c19perBeh02 +
c19perBeh03 +
c19RCA01 +
c19RCA02 +
c19RCA03 +
coronaClose_1 +
coronaClose_2 +
coronaClose_3 +
coronaClose_4 +
coronaClose_5 +
coronaClose_6 +
gender +
age +
edu,
data = otherCountry_data)
#create otherCountry summaries
otherCountry_proSo1_summary <- summary(otherCountry_c19ProSo01)
otherCountry_proSo2_summary <- summary(otherCountry_c19ProSo02)
otherCountry_proSo3_summary <- summary(otherCountry_c19ProSo03)
otherCountry_proSo4_summary <- summary(otherCountry_c19ProSo04)
